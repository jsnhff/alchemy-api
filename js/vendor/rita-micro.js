!function(window,undefined){function isNum(e){return!isNaN(parseFloat(e))&&isFinite(e)}function okeys(e){var t=[];for(var i in e)t.push(i);return t}function err(){for(var e="[RiTa] "+arguments[0],t=1;t<arguments.length;t++)e+="\n"+arguments[t];throw Error(e)}function warn(){if(!RiTa.SILENT&&console&&arguments&&arguments.length){console.warn("[WARN] "+arguments[0]);for(var e=1;e<arguments.length;e++)console.warn(arguments[e])}}function log(){!RiTa.SILENT&&console&&console.log.apply(console,arguments)}function strOk(e){return typeof e===S&&e.length>0}function trim(e){return e.replace(/^\s\s*/,"").replace(/\s\s*$/,"")}function last(e){return e&&e.length?e.charAt(e.length-1):E}function extend(e,t){for(var i=0;i<t.length;i++)e.push(t[i])}function endsWith(e,t){return is(e,S)?new RegExp(t+"$").test(e):!1}function startsWith(e,t){return is(e,S)?new RegExp("^"+t).test(e):!1}function equalsIgnoreCase(e,t){return is(e,S)&&is(t,S)?e.toLowerCase()===t.toLowerCase():!1}function makeClass(){return function(e){return this instanceof arguments.callee?void("function"==typeof this.init&&this.init.apply(this,e&&e.callee?e:arguments)):new arguments.callee(arguments)}}function shuffle(e){for(var t=e.slice(),i=t.length,n=i;n--;){var r=parseInt(Math.random()*i),s=t[n];t[n]=t[r],t[r]=s}return t}function isNode(){return"undefined"!=typeof module&&module.exports}function inArray(e,t){return e?e.indexOf(t)>-1:!1}function escapeRegExp(e){return e.replace(/([.*+?^=!:${}()|\[\]\/\\])/g,"\\$1")}var _VERSION_="1.0.93",Type={N:"number",S:"string",O:"object",A:"array",B:"boolean",R:"regexp",F:"function",get:function(e){return"undefined"!=typeof e?{}.toString.call(e).match(/\s([a-zA-Z]+)/)[1].toLowerCase():void 0},is:function(e,t){return Type.get(e)===t},ok:function(e,t){if(Type.get(e)!=t)throw TypeError("Expected "+(t?t.toUpperCase():t+E)+", but received "+(e?Type.get(e).toUpperCase():e+E));return!0}},is=Type.is,ok=Type.ok,RiText={};RiText._graphics=function(){};var RiTa={VERSION:_VERSION_,USE_LEXICON:!0,SPLIT_CONTRACTIONS:!1,MOVE_TO:"MoveTo",COLOR_TO:"ColorTo",FADE_IN:"FadeIn",FADE_OUT:"FadeOut",TEXT_TO:"TextTo",TIMER:"Timer",SCALE_TO:"ScaleTo",ROTATE_TO:"RotateTo",TEXT_ENTERED:"TextEntered",BOUNDING_ALPHA:"BoundingAlpha",DATA_LOADED:"DataLoaded",UNKNOWN:"Unknown",INTERNAL:"Internal",LERP:"Lerp",JAVA:1,JS:2,NODE:3,LEFT:37,UP:38,RIGHT:39,DOWN:40,CENTER:3,SYLLABLES:"syllables",PHONEMES:"phonemes",STRESSES:"stresses",TOKENS:"tokens",TEXT:"text",POS:"pos",FIRST_PERSON:1,SECOND_PERSON:2,THIRD_PERSON:3,PAST_TENSE:4,PRESENT_TENSE:5,FUTURE_TENSE:6,SINGULAR:7,PLURAL:8,NORMAL:9,FEATURE_DELIM:":",STRESSED:"1",UNSTRESSED:"0",PHONEME_BOUNDARY:"-",WORD_BOUNDARY:" ",SYLLABLE_BOUNDARY:"/",SENTENCE_BOUNDARY:"|",VOWELS:"aeiou",ABBREVIATIONS:["Adm.","Capt.","Cmdr.","Col.","Dr.","Gen.","Gov.","Lt.","Maj.","Messrs.","Mr.","Mrs.","Ms.","Prof.","Rep.","Reps.","Rev.","Sen.","Sens.","Sgt.","Sr.","St.","a.k.a.","c.f.","i.e.","e.g.","vs.","v.","Jan.","Feb.","Mar.","Apr.","Mar.","Jun.","Jul.","Aug.","Sept.","Oct.","Nov.","Dec."],INFINITIVE:1,GERUND:2,IMPERATIVE:3,BARE_INFINITIVE:4,SUBJUNCTIVE:5,SILENT:!1,start:function(){},untokenize:function(e,t,i){if(t=t||SP,i=i||1){for(var n=e[0]||E,r=1;r<e.length;r++)e[r]&&(RiTa.isPunctuation(e[r])||(n+=t),n+=e[r]);return n.trim()}return e.join(t)},random:function(){var e=Math.random();if(0===arguments.length)return e;if(1===arguments.length)return e*arguments[0];var t=arguments[0],i=arguments[1];return e*(i-t)+t},randomItem:function(e){return e[Math.floor(Math.random()*e.length)]},distance:function(e,t,i,n){var r=e-i,s=t-n;return Math.sqrt(r*r+s*s)},timer:function(e,t){var i,n,r=arguments;if(r.length&&is(r[0],O)&&(r=Array.prototype.slice.call(r,1)),r.length<1)throw Error("Bad args to RiTa.timer("+r+")");return t=r.length>1?r[1]:null,n=new Timer(function(){RiTaEvent(RiTa,"tick")._fire(t)},1e3*[r[0]],!0),n.go(),i=n.id(),timers[i]=n,i},stopTimer:function(e){timers[e]?timers[e].stop():warn("no timer with id: "+e)},pauseTimer:function(e,t){if(t=is(t,N)?t:Number.MAX_VALUE,timers[e]){timers[e].pause();var i=e;return setTimeout(function(){timers[i]?timers[i].play():warn("no timer!!!")},1e3*t),i}return warn("no timer with id: "+e),-1},_isPosTag:function(e){return PosTagger.isTag(e)},_tagForPENN:function(e){if(!e||!e.length)return EA;var t=is(e,S)?RiTa.tokenize(e):e;return PosTagger.tag(t)},_tagForWordNet:function(e){var t,i=RiTa._tagForPENN(e);if(e&&i.length){for(var n=0;n<i.length;n++)t=i[n],i[n]="-",PosTagger.isNoun(t)?i[n]="n":PosTagger.isVerb(t)?i[n]="v":PosTagger.isAdverb(t)?i[n]="r":PosTagger.isAdj(t)&&(i[n]="a");return i}return EA},getPosTags:function(e,t){return t?RiTa._tagForWordNet(e):RiTa._tagForPENN(e)},getPosTagsInline:function(e,t){if(!e||!e.length)return E;t=t||"/",e=is(e,S)?RiTa.tokenize(e):e;for(var i=E,n=RiTa.getPosTags(e),r=0;r<e.length;r++)i+=e[r],RiTa.isPunctuation(e[r])||(i+=t+n[r]),i+=SP;return i.trim()},posToWordNet:function(e){return strOk(e)?PosTagger.isNoun(e)?"n":PosTagger.isVerb(e)?"v":PosTagger.isAdverb(e)?"r":PosTagger.isAdj(e)?"a":(warn(e+" is not a valid pos-tag"),"-"):E},getPresentParticiple:function(e){return Conjugator().getPresentParticiple(e)},getPastParticiple:function(e){return Conjugator().getPastParticiple(e)},conjugate:function(e,t){return Conjugator().conjugate(e,t)},upperCaseFirst:function(e){return e.charAt(0).toUpperCase()+e.substring(1)},pluralize:function(e){if(!strOk(e))return E;var t,i,n=PLURAL_RULES;if(inArray(MODALS,e.toLowerCase()))return e;for(t=0;t<n.length;t++)if(i=n[t],i.applies(e.toLowerCase()))return i.fire(e);return DEFAULT_PLURAL_RULE.fire(e)},singularize:function(e){if(!strOk(e))return E;var t,i,n=SINGULAR_RULES;if(inArray(MODALS,e.toLowerCase()))return e;for(t=n.length;t--;)if(i=n[t],i.applies(e.toLowerCase()))return i.fire(e);return this.stem(e,"Pling")},trim:function(e){return trim(e)},tokenize:function(e,t){return t?e.split(t):(e=trim(e).replace(/``/g,"`` "),e=e.replace(/''/g,"  ''"),e=e.replace(/([\\?!\"\\.,;:@#$%&])/g," $1 "),e=e.replace(/\\.\\.\\./g," ... "),e=e.replace(/\\s+/g,SP),e=e.replace(/,([^0-9])/g," , $1"),e=e.replace(/([^.])([.])([\])}>\"']*)\\s*$/g,"$1 $2$3 "),e=e.replace(/([\[\](){}<>])/g," $1 "),e=e.replace(/--/g," -- "),e=e.replace(/$/g,SP),e=e.replace(/^/g,SP),e=e.replace(/([^'])' /g,"$1 ' "),e=e.replace(/'([SMD]) /g," '$1 "),RiTa.SPLIT_CONTRACTIONS&&(e=e.replace(/'ll /g," 'll "),e=e.replace(/'re /g," 're "),e=e.replace(/'ve /g," have "),e=e.replace(/n't /g," not "),e=e.replace(/'LL /g," 'LL "),e=e.replace(/'RE /g," 'RE "),e=e.replace(/'VE /g," 'VE "),e=e.replace(/N'T /g," N'T ")),e=e.replace(/ ([Cc])an't /g," $1an not "),e=e.replace(/ ([Cc])annot /g," $1an not "),e=e.replace(/ ([Dd])idn't /g," $1id not "),e=e.replace(/ ([CcWw])ouldn't /g," $1ould not "),e=e.replace(/ ([A-Z]) \\./g," $1. "),e=e.replace(/\\s+/g,SP),e=e.replace(/^\\s+/g,E),trim(e).split(/\s+/))},splitSentences:function(e,t){var i=e.match(/(\S.+?[.!?])(?=\s+|$)/g);return e.length&&i&&i.length?i:[e]},_regexMatch:function(e,t){return e&&t?(typeof t===S&&(t=new RegExp(t)),t.test(e)):!1},_regexReplace:function(e,t,i){return e&&t?(typeof t===S&&(t=new RegExp(t)),e.replace(t,i)):E},isAbbreviation:function(e,t){return t=t||!1,e=t?e:RiTa._titleCase(e),inArray(this.ABBREVIATIONS,e)},_loadStringNode:function(e,t,i){var n="",r=i||SP,s=/.+?:\/\/.+/.test(e),a=this;if(s){var o=function(i){i.on("data",function(e){n+=e}),i.on("error",function(e){throw e}),i.on("end",function(){n=n.toString("utf-8").replace(/[\r\n]+/g,r).trim(),a.fireDataLoaded(e,t,n)})},u=require("http").request(e,o);u.on("socket",function(e){e.setTimeout(3e3),e.on("timeout",function(){throw u.abort(),Error("[RiTa] loadString timed-out and aborted request")})}),u.end()}else{var l=require("fs");l.readFile(e,function(i,n){if(i||!n)throw err("[Node] Error reading file: "+e+"\n"+i),i;n=n.toString("utf-8").replace(/[\r\n]+/g,r).trim(),a.fireDataLoaded(e,t,n)})}},_loadStringDOM:function(e,t,i){function n(e){var t=document.createElement("div");return t.innerHTML=e,0===t.childNodes.length?E:t.childNodes[0].nodeValue}var r,s,a=i||SP,o=this;if("undefined"==typeof document||!document)throw Error("Document 'undefined' (are you running in a browser?)");return s=document.createElement("iframe"),s.setAttribute("src",e),s.setAttribute("style","display: none"),document.body?(document.body.appendChild(s),r=s.contentWindow||s.contentDocument.parentWindow,void(r.onload=function(){var i="[RiTa] loadString() unexpected error!";return r&&r.document&&r.document.body&&r.document.body.childNodes&&r.document.body.childNodes.length?i=r.document.body.childNodes[0].innerHTML:console.error("[RiTa] loadString("+e+") failed trying iFrame-load"),i?(i=n(i.replace(/[\r\n]+/g,a).trim()),void o.fireDataLoaded(e,t,i)):(console.error("[RiTa] loadString("+e+") unable to load text from: "+e),E)})):(console.error("[RiTa] loadString() found null document.body!"),E)},loadStrings:function(e,t){if(is(e,A))throw Error("RiTa.loadStrings() does not accept multiple urls");var i=this.fireDataLoaded;this.loadString(e,function(n){var r=n.split("\n");i(e,t,r)},"\n")},loadString:function(e,t,i){ok(e,S);var n=isNode()?this._loadStringNode:this._loadStringDOM;n.call(this,e,t,i)},fireDataLoaded:function(e,t,i){return t?t(i,e):RiTaEvent({name:"RiTaLoader",urls:is(e,S)?[e]:e},RiTa.DATA_LOADED,i)._fire()},isQuestion:function(e){for(var t=RiTa.tokenize(e),i=0;i<QUESTION_STARTS.length;i++)if(equalsIgnoreCase(t[0],QUESTION_STARTS[i]))return!0;return!1},isSentenceEnd:function(e,t){if(!is(e,S)||!is(t,S))return!1;var i=e.charAt(0),n=e.length;if(RiTa.isAbbreviation(e))return!1;if(n>1&&-1!=i.indexOf("`'\"([{<")&&RiTa.isAbbreviation(e.substring(1)))return!1;if(n>2&&("'"==e.charAt(0)&&"'"==e.charAt(1)||"`"==e.charAt(0)&&"`"==e.charAt(1))&&RiTa.isAbbreviation(e.substring(2)))return!1;var r=t.length,s=e.charAt(n-1),a=n>1?e.charAt(n-2):" ",o=n>2?e.charAt(n-3):" ",u=t.charAt(0),l=r>1?t.charAt(1):" ",c=r>2?t.charAt(2):" ";return u==u.toUpperCase()||l==l.toUpperCase()&&-1!=u.indexOf("`'\"([{<")||c==c.toUpperCase()&&("`"==u&&"`"==l||"'"==u&&"'"==l)||"_"==t||"<"==u?"?"==s||"!"==s||-1!=a.indexOf("?!.")&&-1!=s.indexOf("\"'}>)")||-1!=o.indexOf("?!.")&&"'"==a&&"'"==s?!0:"."!=s?!1:2==n&&a==a.toUpperCase()?!1:4==n&&"."==o&&a==a.toUpperCase()&&e.charAt(0)==e.charAt(0).toUpperCase()?!1:!0:!1},isW_Question:function(e){for(var t=RiTa.tokenize(e),i=0;i<W_QUESTION_STARTS.length;i++)if(equalsIgnoreCase(t[0],W_QUESTION_STARTS[i]))return!0;return!1},unescapeHTML:function(e){if(!e||!e.length)return e;var t=String.fromCharCodePoint,i=e.replace(/&lt;/g,"<").replace(/&gt;/g,">").replace(/&amp;/g,"&").replace(/&quot;/g,'"');return String.fromCharCodePoint=function(){for(var e=[],t=0;t<arguments.length;t++){var i=arguments[t];arguments[t]<65536?e.push(arguments[t]):arguments[t]<1114112&&(i-=65536,e.push((i>>10&1023)+55296),e.push((1023&i)+56320))}return String.fromCharCode.apply(String,e)},i=i.replace(/&#(\d+);/g,function(e,t){return String.fromCharCodePoint(parseInt(t,10))}).replace(/&#x([0-9a-f]+);/gi,function(e,t){return String.fromCharCodePoint(parseInt(t,16))}),String.fromCharCodePoint=t,i},randomOrdering:function(e){var t=[];if(e){for(var i=0;e>i;i++)t.push(i);for(var n,r,s=t.length;s;n=parseInt(Math.random()*s),r=t[--s],t[s]=t[n],t[n]=r);}return t},stripPunctuation:function(e){return e===E?E:e.replace(PUNCTUATION_CLASS,E)},trimPunctuation:function(e){for(var t;e.length>0&&(t=e.charAt(0),RiTa.isPunctuation(t));)e=e.substr(1);for(;e.length>0&&(t=e.charAt(e.length-1),RiTa.isPunctuation(t));)e=e.substring(0,e.length-1);return e},isPunctuation:function(e){return e&&e.length?ONLY_PUNCT.test(e):!1},hasPunctuation:function(e){return e&&e.length?ONLY_PUNCT.test(e):!1},asList:function(e){return e?e.join(", ").trim():"[]"},env:function(){return isNode()?RiTa.NODE:RiTa.JS},chomp:function(e){return e.replace(/\s+$|^\s+/g,E)},getPhonemes:function(e){return RiString(e).analyze().get(RiTa.PHONEMES)},getStresses:function(e){return RiString(e).analyze().get(RiTa.STRESSES)},getSyllables:function(e){return RiString(e).analyze().get(RiTa.SYLLABLES)},getWordCount:function(e){return RiTa.tokenize(e).length},stem:function(e,t){t=t||"Lancaster","Lancaster"!=t&&"Porter"!=t&&"Pling"!=t&&err("Bad stemmer type: "+t);var i=Stemmer["stem_"+t];if(e.indexOf(SP)<0)return i(e);e=e.replace(/[^\w]/g,SP),e=e.replace(/\s+/g,SP);for(var n=[],r=e.split(SP),s=0;s<r.length;s++)n.push(i(r[s]));return n.join(SP)},p5Compatible:function(e){arguments.callee.setupAndDraw||(arguments.callee.setupAndDraw=function(){typeof window.setup==F&&window.setup(),typeof window.draw==F&&typeof RiText.loop==F&&RiText.loop()}),"undefined"!=typeof window&&window&&(typeof window.mouseClicked==F&&(window.onmouseup=window.mouseClicked),typeof window.mousePressed==F&&(window.onmousedown=window.mousePressed),typeof window.mouseReleased==F&&(window.onmouseup=window.mouseReleased),typeof window.mouseMoved==F&&(window.onmousemove=window.mouseMoved)),e?"undefined"!=typeof window&&window&&!hasProcessing&&(window.UP||(window.UP=RiTa.UP),window.DOWN||(window.DOWN=RiTa.DOWN),window.LEFT||(window.LEFT=RiTa.LEFT),window.RIGHT||(window.RIGHT=RiTa.RIGHT),window.CENTER||(window.CENTER=RiTa.CENTER),window.onload||(window.onload=arguments.callee.setupAndDraw)):"undefined"!=typeof window&&window&&!hasProcessing&&(window.UP===RiTa.UP&&delete window.UP,window.DOWN===RiTa.DOWN&&delete window.DOWN,window.LEFT===RiTa.LEFT&&delete window.LEFT,window.RIGHT===RiTa.RIGHT&&delete window.RIGHT,window.CENTER===RiTa.CENTER&&delete window.CENTER,window.onload&&window.onload==arguments.callee.setupAndDraw&&(window.onload=undefined))},_titleCase:function(e){return e&&e.length?e.substring(0,1).toUpperCase()+e.substring(1):e},minEditDist:function(e,t,i){var n=i?MinEditDist.computeAdjusted:MinEditDist.computeRaw;return n.call(MinEditDist,e,t)}},RiMarkov=makeClass();RiMarkov.MAX_GENERATION_ATTEMPTS=1e3,RiMarkov._SSRE=/"?[A-Z][a-z"',;`-]*/,RiMarkov._SSDLM="D=l1m_",RiMarkov.prototype={init:function(e,t,i){var n=this._initArgs.apply(this,arguments);ok(n[0],N),this._n=n[0],this.pathTrace=[],this.sentenceList=[],this.sentenceStarts=[],this.minSentenceLength=6,this.maxSentenceLength=35,this.maxDuplicatesToSkip=1e4,this.root=new TextNode(null,"ROOT"),this.isSentenceAware=n.length>1&&!n[1]?!1:!0,this.allowDuplicates=n.length>2&&!n[2]?!1:!0,this.printIgnoredText=!1,this.smoothing=!1},_initArgs:function(){var e=arguments,t=Type.get(e[0]);if(e.length&&(t===O||"global"===t||"window"===t)){var i=Array.prototype.slice.call(e,1);return this._initArgs.apply(this,i)}return e},getProbability:function(e){this.root||err("Model not initd: null root!");var t=is(e,S)?this.root.lookup(e):this._findNode(e);return t?t.probability():0},getProbabilities:function(e){is(e,S)&&(e=[e]),e.length>this._n&&(e=e.slice(Math.max(0,e.length-(this._n-1)),e.length));var t={},i=this._findNode(e);if(!i)return{};for(var n=i.childNodes(),r=0;r<n.length;r++){var s=n[r];s&&(t[s.token]=s.probability())}return t},getCompletions:function(e,t){var i,n,r,s,a=[];if(t){if(e.length+t.length>this._n&&err("Sum of pre.length && post.length must be < N, was "+(e.length+t.length)),i=this._findNode(e),!i)return null;s=i.childNodes();for(var o=0;o<s.length;o++){n=s[o],r=e.slice(0),r.push(n.token);for(var u=0;u<t.length;u++)r.push(t[u]);this._findNode(r)&&a.push(n.token)}return a}var l=this.getProbabilities(e),c=okeys(l);return c.sort(function(e,t){return l[t]-l[e]})},generateUntil:function(e,t,i){t=t||1,i=i||Number.MAX_VALUE;var n,r,s=0,a=999;e:for(;++s<a;)for(r=this.generateTokens(t);r.length<i;){if(n=this._nextNodeForArr(r),!n||!n.token)continue e;if(r.push(n.token),n.token.search(e)>-1)return r}return s>=a&&err("\nRiMarkov failed to complete after "+s+" attempts\n"),r},generateTokens:function(e){var t=0,i=500,n=[];e:for(;++t<i;){var r=this.root.selectChild(null,!0);if(r&&r.token){for(n.push(r);n.length<e;){if(r=this._nextNodeForArr(n),!r||!r.token){n=[];continue e}n.push(r)}break}}n.length<e&&err("\nRiMarkov failed to complete after "+t+" tries, with only "+n.length+" successful generations...\n");for(var s=[],a=0;a<n.length;a++)s[a]=n[a].token;return s},useSmoothing:function(e){return arguments.length?(this.smoothing=e,this):this.smoothing},sentenceAware:function(){if(arguments.length>0)throw Error("sentenceAware() takes no arguments, instead use the constructor RiMarkov(n, recognizeSentences);");return this.isSentenceAware},getN:function(){return this._n},print:function(){return console&&console.log(this.root.asTree(!1)),this},ready:function(e){return this.size()>0},loadFrom:function(e,t,i,n){var r=this;is(e,S)||ok(e,A),RiTa.loadString(e,function(e){r.loadText(e,t,i),n&&is(n,F)&&n(e)})},loadText:function(e,t,i){ok(e,S),t=t||1,(1>t||t!=Math.floor(t))&&err("Multiplier must be an positive integer, found: "+t);var n=this.isSentenceAware?this._loadSentences(RiTa.splitSentences(e),t):this.loadTokens(RiTa.tokenize(e,i),t);return n},loadTokens:function(e,t){t=t||1,(1>t||t!=Math.floor(t))&&err("multiplier must be an positive integer, found: "+t),this.root.count+=e.length;for(var i,n=0;n<e.length;n++){i=[];for(var r=0;r<this._n;r++)i[r]=n+r<e.length&&e[n+r]?e[n+r]:null;for(var s=0;t>s;s++)for(var a=this.root,o=0;o<i.length;o++)a.token&&(a=a.addChild(i[o],this.smoothing?2:1))}return this},generateSentences:function(e){this.isSentenceAware||err("generateSentences() can only be called when the model is in 'sentence-aware' mode, otherwise use generateTokens()");for(var t=this._getSentenceStart(),i=t.token+SP,n=[],r=0,s=0,a=1;n.length<e;)if(a>=this.maxSentenceLength&&(t=this._getSentenceStart(),i=t.token+SP,a=1),t.isLeaf())t=this._tracePathFromRoot(t);else if(t=this._nextNodeForNode(t),t.isSentenceStart){if(a>=this.minSentenceLength){var o=RiTa.untokenize(i.trim().split(/\s+/));o=o.replace(/(.)\( /,"$1 ("),this._validateSentence(o)&&(n.indexOf(o)<0&&n.push(o),s+=r,r=0)}t=this._getSentenceStart(),i=t.token+SP,a=1}else if(a++,i+=t.token+SP,++r>=RiMarkov.MAX_GENERATION_ATTEMPTS){this._onGenerationIncomplete(s+=r,n.length);break}return n},_validateSentence:function(e){var t=RiTa.tokenize(e),i=t[0],n=t[t.length-1];if(!i.match(/[A-Z]\S*/))return this.printIgnoredText&&log("Skipping: bad first char in '"+e+"'"),!1;if(!n.match(/[!?.]/))return this.printIgnoredText&&log("Bad last token: '"+n+"' in: "+e),!1;if(!this.allowDuplicates&&(this.isSentenceAware||err("Invalid state: allowDuplicates must be true when not generating sentences"),this.sentenceList.indexOf(e)>-1))return++this.skippedDups==this.maxDuplicatesToSkip&&(warn("Hit skip-maximum (RiMarkov.maxDuplicatesToSkip="+this.maxDuplicatesToSkip+") after skipping "+this.maxDuplicatesToSkip+", now allowing duplicates!"),this.allowDuplicates=!0),this.printIgnoredText&&log("Ignoring duplicate: "+e),!1;var r=e.split(/\s+/);return RiTa.isAbbreviation(r[r.length-1])?!1:!0},_tracePathFromRoot:function(e){e.pathFromRoot(this.pathTrace),this.pathTrace.pop();for(var t=this.root;this.pathTrace.length;){var i=this.pathTrace.pop();t=t.lookup(i)}return t},_nextNodeForArr:function(e){for(var t=Math.max(0,e.length-(this._n-1)),i=this.root.lookup(e[t++]),n=t;n<e.length;n++)i&&(i=i.lookup(e[n]));return i?i.selectChild(null,!0):null},_nextNodeForNode:function(e){for(var t,i=0,n=0,r=e.childNodes(),s=1e3;;){n=0,t=Math.random();for(var a=0,o=r.length;o>a;a++){var u=r[a];if(n+=u.probability(),(!e.isRoot()||!this.isSentenceAware||u.isSentenceStart())&&n>t)return u}i++,warn("Prob. miss (#'+attempts+') in RiMarkov.nextNode(). Make sure there are a sufficient\n       # of sentences in the model that are longer than 'minSentenceLength'"),i==s&&err("PROB. MISS"+e+" total="+n+" selector="+t)}},_clean:function(e){return RiTa.trim(e.replace(/\s+/,SP))},_onGenerationIncomplete:function(e,t){warn("\nRiMarkov failed to complete after "+e+" tries\n       Giving up after "+t+" successful generations\n")},_loadSentences:function(e,t){ok(e,A),t=t||1,t=Math.min(t,1);var i,n,r,s,a=[];for(i=0;i<e.length;i++)if(s=this._clean(e[i]),this.allowDuplicates||this.sentenceList.push(s),r=RiTa.tokenize(s),this._validSentenceStart(r[0]))for(a.push(RiMarkov._SSDLM+r[0]),n=1;n<r.length;n++)a.push(r[n]);else this.printIgnoredText&&warn("Skipping (bad sentence start): "+r);var o,u=a,l=this.getN();for(i=0;i<u.length;i++){for(o=[],n=0;l>n;n++)i+n<u.length&&(o[n]=u[i+n]);for(n=0;t>n;n++)this._addSentenceSequence(o)}return this.root.count+=u.length,this},size:function(){return this.root.count},_validSentenceStart:function(e){return!this.isSentenceAware||e&&e.match(RiMarkov._SSRE)},_addSentenceSequence:function(e){for(var t=this.root,i=0;i<e.length;i++)if(e[i]&&t.token){var n=e[i];if(startsWith(n,RiMarkov._SSDLM)){n=n.substring(RiMarkov._SSDLM.length);var r=t;t=t.addChild(n,this.smoothing?2:1),t.isSentenceStart=!0,r.isRoot()&&this.sentenceStarts.push(t.token)}else t=t.addChild(n,this.smoothing?2:1)}},_getSentenceStart:function(){this.isSentenceAware||err("getSentenceStart() can only be called when the model is in 'sentence-aware' mode..."),this.sentenceStarts&&this.sentenceStarts.length||err("No sentence starts found! genSen="+this.isSentenceAware);var e=RiTa.randomItem(this.sentenceStarts);return this.root.lookup(e)},_findNode:function(e){if(!e||!is(e,A)||!e.length)return null;var t=this._n,i=(Math.min(e.length,t-1),Math.max(0,e.length-(t-1))),n=this.root.lookup(e[i++]);if(!n)return null;var r=0,s=[];s[r++]=n;for(var a=i;a<e.length;a++){if(n=n.lookup(e[a]),!n)return null;s[r++]=n}return s?s[s.length-1]:null}};var RiTaEvent=makeClass();RiTaEvent._callbacksDisabled=!1,RiTaEvent.prototype={init:function(e,t,i){is(e,O)||ok(e,S);var n=RiTaEvent.prototype.init;n.ID||(n.ID=0),this._id=++n.ID,this._data=i,this._source=e,this._type=t||RiTa.UNKNOWN},toString:function(){var e="RiTaEvent[#"+this._id+" type=("+this._type+") source="+this._source.toString();return e+=this._data?" data-length="+this._data.toString().length:e+=" data=null",e+"]"},source:function(){return this._source},data:function(){return this._data},type:function(){return this._type},isType:function(e){return this._type===e},_fire:function(e){if(e=e||window.onRiTaEvent,!e){var t=RiText._graphics();t&&t.onRiTaEvent&&(e=t.onRiTaEvent)}if(e&&is(e,F))try{return e(this),this}catch(i){RiTaEvent._callbacksDisabled=!0;var n="RiTaEvent: error calling '"+e+"': "+i;throw is(e,S)&&(n+="**callback must be a function in JS"),warn(n),i}return RiTaEvent._callbacksDisabled=!0,this}};var RiWordNet=makeClass();RiWordNet.prototype={init:function(){throw Error("RiWordNet is not yet implemented in JavaScript!")}};var RiLexicon=makeClass();RiLexicon.data,RiLexicon.emittedWarning=!1,RiLexicon.prototype={init:function(){RiLexicon.data||this._load()},_load:function(){if("undefined"!=typeof _RiTa_DICT&&RiTa.USE_LEXICON){console.log("[RiTa] Loading lexicon data..."),RiLexicon.data={};for(var e in _RiTa_DICT)RiLexicon.data[e]=_RiTa_DICT[e]}else RiLexicon.emittedWarning||warn("RiTa lexicon appears to be missing! Part-of-speech tagging (at least) will be inaccurate"),RiLexicon.emittedWarning=!0},reload:function(){this.clear(),this._load()},clear:function(){RiLexicon.data=undefined;for(var e in RiLexicon.data)delete RiLexicon.data[e]},addWord:function(e,t,i){return RiLexicon.data[e.toLowerCase()]=[t.toLowerCase(),i.toLowerCase()],this},removeWord:function(e){return delete RiLexicon.data[e.toLowerCase()],this},similarByLetter:function(e,t,i){var n=Number.MAX_VALUE,r=2,s=[];if(!e||!e.length)return EA;e=e.toLowerCase(),t=t||1,i=i||!1;var a,o=e+"s",u=e+"es",l=e.length;for(var c in RiLexicon.data)c.length<r||i&&c.length!=l||c!=e&&c!=o&&c!=u&&(a=MinEditDist.computeRaw(c,e),a>=t&&n>a?(n=a,s=[c]):a==n&&s.push(c));return s},similarBySound:function(e,t){t=t||1;{var i,n,r,s=Number.MAX_VALUE,a=[],o=2,u=RiTa.getPhonemes(e),l=u?u.split("-"):[],c=e+"s",h=e+"es";LetterToSound()}if(!l[0]||!e||!e.length)return EA;for(i in RiLexicon.data)i.length<o||i!=e&&i!=c&&i!=h&&(u=this._getRawPhones(i),n=u.replace(/1/g,E).replace(/ /g,"-").split("-"),r=MinEditDist.computeRaw(n,l),r>=t&&s>r?(s=r,a=[i]):r==s&&a.push(i));return a},substrings:function(e,t){t=t||0===t||4;var i,n=[];for(i in RiLexicon.data)i==e||i.length<t||e.indexOf(i)>=0&&n.push(i);return n},superstrings:function(e){var t,i=[];for(t in RiLexicon.data)t!=e&&t.indexOf(e)>=0&&i.push(t);return i},similarBySoundAndLetter:function(e){var t=[],i=this.similarBySound(e),n=this.similarByLetter(e);if(!i||i.length<1||!n||n.length<1)return t;for(var r=0;r<i.length;r++)n.indexOf(i[r])>-1&&t.push(i[r]);return t},words:function(){var e,t=arguments,i=!1,n=[],r=okeys(RiLexicon.data);switch(t.length){case 2:is(t[0],B)?(i=t[0],e=is(t[1],R)?t[1]:new RegExp(t[1])):(i=t[1],e=is(t[0],R)?t[0]:new RegExp(t[0]));break;case 1:if(is(t[0],B))return t[0]?shuffle(r):r;e=is(t[0],R)?t[0]:new RegExp(t[0]);break;case 0:return r}for(var s=0;s<r.length;s++)e.test(r[s])&&n.push(r[s]);return i?shuffle(n):n},_isVowel:function(e){return strOk(e)&&RiTa.VOWELS.indexOf(e)>-1},_isConsonant:function(e){return typeof e==S&&1==e.length&&RiTa.VOWELS.indexOf(e)<0&&/^[a-z\u00C0-\u00ff]+$/.test(e)},containsWord:function(e){return strOk(e)&&RiLexicon.data&&RiLexicon.data[e.toLowerCase()]},isRhyme:function(e,t,i){if(!strOk(e)||!strOk(t)||equalsIgnoreCase(e,t))return!1;var n=this._lastStressedPhoneToEnd(e,i),r=this._lastStressedPhoneToEnd(t,i);return strOk(n)&&strOk(r)&&n===r},rhymes:function(e){if(this.containsWord(e)){var t,i,n=this._lastStressedPhoneToEnd(e),r=[];for(t in RiLexicon.data)t!==e&&(i=this._getRawPhones(t),strOk(i)&&endsWith(i,n)&&r.push(t));return r.length>0?r:EA}return EA},alliterations:function(e,t,i){t=t||4;var n,r,s=[],a=this._firstConsonant(this._firstStressedSyllable(e,i));for(r in RiLexicon.data)n=this._firstConsonant(this._firstStressedSyllable(r,i)),n&&a===n&&r.length>t&&s.push(r);return s},isAlliteration:function(e,t,i){if(!strOk(e)||!strOk(t))return!1;if(equalsIgnoreCase(e,t))return!0;var n=this._firstConsonant(this._firstStressedSyllable(e,i)),r=this._firstConsonant(this._firstStressedSyllable(t,i));return strOk(n)&&strOk(r)&&n===r},_firstStressedSyllable:function(e,t){var i,n,r=this._getRawPhones(e,t),s=-1;if(!strOk(r))return E;if(s=r.indexOf(RiTa.STRESSED),0>s)return E;for(i=r.charAt(--s);" "!=i;){if(--s<0){s=0;break}i=r.charAt(s)}return n=0===s?r:trim(r.substring(s)),s=n.indexOf(" "),0>s?n:n.substring(0,s)},isVerb:function(e){return this._checkType(e,PosTagger.VERBS)},isNoun:function(e){return this._checkType(e,PosTagger.NOUNS)},isAdverb:function(e){return this._checkType(e,PosTagger.ADV)},isAdjective:function(e){return this._checkType(e,PosTagger.ADJ)},size:function(){return RiLexicon.data?okeys(RiLexicon.data).length:0},_checkType:function(e,t){if(e&&-1!=e.indexOf(SP))throw Error("[RiTa] _checkType() expects a single word, found: "+e);for(var i=this._getPosArr(e),n=0;n<i.length;n++)if(t.indexOf(i[n])>-1)return!0;return!1},_getSyllables:function(e){if(!strOk(e))return E;for(var t=RiTa.tokenize(e),i=[],n=0;n<t.length;n++)i[n]=this._getRawPhones(t[n]).replace(/\s/g,"/");return RiTa.untokenize(i).replace(/1/g,E).trim()},_getPhonemes:function(e){if(!strOk(e))return E;for(var t=RiTa.tokenize(e),i=[],n=0;n<t.length;n++)if(!RiTa.isPunctuation(t[n])){if(i[n]=this._getRawPhones(t[n]),!i[n].length)return E;i[n]=i[n].replace(/ /g,"-")}return RiTa.untokenize(i).replace(/1/g,E).trim()},_getStresses:function(e){var t,i,n=[],r=[],s=is(e,A)?e:RiTa.tokenize(e);if(!strOk(e))return E;for(t=0;t<s.length;t++)RiTa.isPunctuation(s[t])||(r[t]=this._getRawPhones(s[t]));for(t=0;t<r.length;t++)if(r[t]){i=r[t].split(SP);for(var a=0;a<i.length;a++){var o=i[a].indexOf(RiTa.STRESSED)>-1?RiTa.STRESSED:RiTa.UNSTRESSED;a>0&&(o="/"+o),n.push(o)}}return n.join(SP).replace(/ \//g,"/")},lexicalData:function(e){return 1==arguments.length?(RiLexicon.data=e,this):RiLexicon.data},_lookupRaw:function(e){return e=e.toLowerCase(),RiLexicon.data&&RiLexicon.data[e]?RiLexicon.data[e]:null},_getRawPhones:function(e,t){var i,n=this._lookupRaw(e);return t=t||!1,n&&t&&(log("[RiTa] Using letter-to-sound rules for: "+e),i=LetterToSound.getInstance().getPhones(e),i&&i.length)?RiString.syllabify(i):n&&2==n.length?n[0]:E},_getPosData:function(e){var t=this._lookupRaw(e);return t&&2==t.length?t[1]:E},_getPosArr:function(e){var t=this._getPosData(e);return strOk(t)?t.split(SP):EA},_getBestPos:function(e){var t=this._getPosArr(e);return t.length>0?t[0]:[]},_firstConsonant:function(e){if(!strOk(e))return E;var t=e.split(RiTa.PHONEME_BOUNDARY);if(t)for(var i=0;i<t.length;i++)if(this._isConsonant(t[i].charAt(0)))return t[i];return E},_lastStressedPhoneToEnd:function(e,t){if(!strOk(e))return E;var i,n,r,s=this._getRawPhones(e,t);if(!strOk(s))return E;if(i=s.lastIndexOf(RiTa.STRESSED),0>i)return E;for(n=s.charAt(--i);"-"!=n&&" "!=n;){if(--i<0)return s;n=s.charAt(i)}return r=s.substring(i+1)},randomWord:function(){var e,t,i,n=!1,r=arguments,s=okeys(RiLexicon.data),a=Math.floor(Math.random()*okeys(RiLexicon.data).length),o=shuffle(s);switch(r.length){case 2:for(r[0]=trim(r[0]),t=0;t<PosTagger.TAGS.length;t++)PosTagger.TAGS[t]==r[0]&&(n=!0);if(n)for(r[0]=r[0].toLowerCase(),e=0;e<o.length;e++){i=this._lookupRaw(o[e]);{RiTa.getPosTags(o[e])}if(i[0].split(SP).length==r[1]&&r[0]==this._getBestPos(o[e]))return o[e]}return E;case 1:if(is(r[0],S)){for(r[0]=trim(r[0]),t=0;t<PosTagger.TAGS.length;t++)PosTagger.TAGS[t]==r[0]&&(n=!0);if(n)for(r[0]=r[0].toLowerCase(),e=0;e<o.length;e++){var u=this._getBestPos(o[e]);if(r[0]==u)return o[e]}}else for(e=0;e<o.length;e++)if(i=this._lookupRaw(o[e]),i[0].split(SP).length==r[0])return o[e];break;case 0:return s[a]}return E}};var RiString=makeClass();RiString.phones={consonants:["b","ch","d","dh","f","g","hh","jh","k","l","m","n","ng","p","r","s","sh","t","th","v","w","y","z","zh"],vowels:["aa","ae","ah","ao","aw","ax","ay","eh","er","ey","ih","iy","ow","oy","uh","uw"],onsets:["p","t","k","b","d","g","f","v","th","dh","s","z","sh","ch","jh","m","n","r","l","hh","w","y","p r","t r","k r","b r","d r","g r","f r","th r","sh r","p l","k l","b l","g l","f l","s l","t w","k w","d w","s w","s p","s t","s k","s f","s m","s n","g w","sh w","s p r","s p l","s t r","s k r","s k w","s k l","th w","zh","p y","k y","b y","f y","hh y","v y","th y","m y","s p y","s k y","g y","hh w",""],digits:["z-ih-r-ow","w-ah-n","t-uw","th-r-iy","f-ao-r","f-ay-v","s-ih-k-s","s-eh1-v-ax-n","ey-t","n-ih-n"]},RiString._syllabify=function(e){for(var t,i,n=[],r=[],s="string"==typeof e?e.split("-"):e,a=0;a<s.length;a++){var o=s[a].trim(),u=i;if(o.length)if(isNum(last(o))&&(u=parseInt(last(o)),o=o.substring(0,o.length-1)),t&&log(a+")"+o+" stress="+u+" inter="+n.join(":")),inArray(RiString.phones.vowels,o)){for(var l=i,c=i,h=0;h<n.length+1;h++){l=n.slice(0,h),c=n.slice(h,n.length),t&&log("  "+h+") onset="+c.join(":")+"  coda="+l.join(":")+"  inter="+n.join(":"));var p=inArray(RiString.phones.onsets,c.join(" "));if(p||0===r.length||0===c.length){t&&log("  break "+o);break}}r.length>0&&(extend(r[r.length-1][3],l),t&&log("  tack: "+l+" -> len="+r[r.length-1][3].length+" ["+r[r.length-1][3]+"]"));var d=[[u],c,[o],[]];r.push(d),n=[]}else{if(!inArray(RiString.phones.consonants,o)&&" "!=o)throw Error("Invalid phoneme: "+o);n.push(o)}}return n.length>0&&(0===r.length?r.push([[i],n,[],[]]):extend(r[r.length-1][3],n)),RiString._stringify(r)},RiString._stringify=function(e){var t,i,n=[];for(t=0;t<e.length;t++){var r=e[t],s=r[0][0],a=r[1],o=r[2],u=r[3];s!==undefined&&o.length&&(o[0]+=E+s);var l=[];for(i=0;i<a.length;i++)l.push(a[i]);for(i=0;i<o.length;i++)l.push(o[i]);for(i=0;i<u.length;i++)l.push(u[i]);n.push(l.join("-"))}return n.join(SP)},RiString.prototype={init:function(e){is(e,N)&&(e=String.fromCharCode(e)),e=e||"",this._text=e,this._features=undefined},copy:function(){var e=RiString(this._text),t=this.features();e._features={};for(var i in t)e._features[i]=t[i];return e},features:function(){return this._features||this.analyze(),this._features},_initFeatureMap:function(){this._features?(delete this._features.tokens,delete this._features.stresses,delete this._features.phonemes,delete this._features.syllables,delete this._features.pos,delete this._features.text):this._features={},
this._features.text=this.text()},analyze:function(){var e,t,i,n,r,s=E,a=E,o=E,u="/",l="-",c=RiTa.tokenize(this._text),h=RiLexicon();this._features||this._initFeatureMap();for(var p=0,d=c.length;d>p;p++){if(n=!1,e=h&&h._getRawPhones(c[p]),e||(c[p].match(/[a-zA-Z]+/)&&log("[RiTa] Used LTS-rules for '"+c[p]+"'"),t=t||LetterToSound(),i=t.getPhones(c[p]),i&&i.length>0?e=RiString._syllabify(i):(e=c[p],n=!0)),s+=e.replace(/[0-2]/g,E).replace(/ /g,l)+SP,a+=e.replace(/ /g,u).replace(/1/g,E)+SP,n)o+=c[p];else{r=e.split(SP);for(var g=0;g<r.length;g++)r[g].length&&(o+=r[g].indexOf(RiTa.STRESSED)>-1?RiTa.STRESSED:RiTa.UNSTRESSED,g<r.length-1&&(o+=u))}endsWith(o,SP)||(o+=SP)}return this._features.tokens=c.join(SP),this._features.stresses=o.trim(),this._features.phonemes=s.trim().replace(/\\s+/,SP),this._features.syllables=a.trim().replace(/\\s+/,SP),this._features.pos=RiTa.getPosTags(this._text).join(SP),this},get:function(e){this._features||this.analyze();var t=this._features[e];return t||this._features.hasOwnProperty(e)||(this.analyze(),t=this._features[e]),t},set:function(e,t){return this._features||(this._features={}),this._features[e]=t,this},endsWith:function(e){return endsWith(this._text,e)},equals:function(e){return typeof e===S?e===this._text:e.text()===this._text},equalsIgnoreCase:function(e){return typeof e===S?e.toLowerCase()===this._text.toLowerCase():e.text().toLowerCase()===this._text.toLowerCase()},text:function(e){return arguments.length>0?(this._text=e,this._initFeatureMap(),this):this._text},pos:function(){for(var e=RiTa.tokenize(this._text),t=PosTagger.tag(e),i=0,n=t.length;n>i;i++)strOk(t[i])||err("RiString: can't parse pos for:"+e[i]);return t},posAt:function(e){var t=this.pos();return t&&t.length?t[Math.min(0>e?t.length+e:e,t.length-1)]:E},wordAt:function(e){var t=this.words();return 0>e||e>=t.length?E:t[e]},wordCount:function(){return this._text.length?this.words().length:0},words:function(){return RiTa.tokenize(this._text)},indexOf:function(e,t){return this._text.indexOf(e,t)},lastIndexOf:function(e,t){return this._text.lastIndexOf(e,t)},length:function(){return this._text.length},match:function(e){return this._text.match(e)||[]},slice:function(e,t){return this._text.slice(e,t)||E},insertChar:function(e,t){var i=this.text();if(e>i.length||e<-i.length)return warn("RiString.insertChar: bad index="+e),this;e=0>e?e+=i.length:e;var n=i.substring(0,e),r=i.substring(e);return t&&(n+=t),this.text(n+r)},removeChar:function(e){var t=this.text();return e>t.length||e<-t.length?(warn("RiString.removeChar: bad index="+e),this):(e=0>e?e+=t.length:e,this.text(this._text.substring(0,e).concat(this._text.substring(e+1))),this)},replaceChar:function(e,t){var i=this.text();if(e>i.length||e<-i.length)return warn("RiString.replaceChar: bad index="+e),this;e=0>e?e+=i.length:e,i=this.text();var n=i.substring(0,e),r=i.substring(e+1);return t&&(n+=t),this.text(n+r)},replaceFirst:function(e,t){if(e&&!is(e,S)&&e.global){var i="";e.ignoreCase&&(i+="i"),e.multiline&&(i+="m"),e.sticky&&(i+="y"),e=new RegExp(e.source,i)}return this._text=this._text.replace(e,t),this},replaceAll:function(e,t){var i="g";return e&&(t||""===t)&&(!is(e,S)&&e.source?(e.ignoreCase&&(i+="i"),e.multiline&&(i+="m"),e.sticky&&(i+="y"),e=e.source):e=escapeRegExp(e),this._text=this._text.replace(new RegExp(e,i),t)),this},removeWord:function(e){return this.replaceWord(e,E)},insertWord:function(e,t){var i=this.words();return 0>e&&(e+=i.length),t&&t.length>=0&&e>=0&&e<i.length&&(i[e]=t+SP+i[e],this.text(RiTa.untokenize(i))),this},toCharArray:function(){return this._text.split(RiTa.E)},replaceWord:function(e,t){var i=this.words();return 0>e&&(e+=i.length),(t||t===E)&&e>=0&&e<i.length&&(i[e]=t,this.text(RiTa.untokenize(i))),this},split:function(e,t){for(var i=this._text.split(e,t),n=[],r=0;r<i.length;r++)i[r]&&n.push(new RiString(i[r]));return n},startsWith:function(e){return 0===this.indexOf(e)},substr:function(e,t){return this._text.substr(e,t)},substring:function(e,t){return this._text.substring(e,t)},toLowerCase:function(){return this.text(this._text.toLowerCase())},toString:function(){return"RiString["+this._text+"]"},toUpperCase:function(){return this.text(this._text.toUpperCase())},trim:function(){return this.text(trim(this._text))},charAt:function(e){return this._text.charAt(e)},concat:function(e){return this._text.concat(e.text())}};var RiGrammar=makeClass();RiGrammar.START_RULE="<start>",RiGrammar.PROB_PATT=/(.*[^\s])\s*\[([0-9.]+)\](.*)/,RiGrammar.EXEC_PATT=/(.*?)(`[^`]+?\(.*?\);?`)(.*)/,RiGrammar.STRIP_TICKS=/`([^`]*)`/g,RiGrammar.OR_PATT=/\s*\|\s*/,RiGrammar.prototype={init:function(e){this._rules={},this.execDisabled=!1,e&&(is(e,S)||is(e,O)&&typeof e.loadStrings!==F)&&this.load(e)},ready:function(e){return okeys(this._rules).length>0},loadFrom:function(e,t){RiTa.loadString(e,function(e){this.load(e),is(t,F)&&t(e)}.bind(this),"\n")},getYamlParser:function(){return"undefined"!=typeof YAML?YAML.parse:"undefined"!=typeof jsyaml?jsyaml.load:void 0},load:function(e){if(this.reset(),is(e,S)){var t=this.getYamlParser();if(t)try{e=t(e)}catch(i){warn("YAML parsing failed, trying JSON")}if(!is(e,O))try{e=JSON.parse(e)}catch(i){var n=i}}if(n||!is(e,O))return t&&warn("No YAML parser found!"),void err("Grammar appears to be invalid JSON/YAML, please check it! (http://jsonlint.com/ or http://yamllint.com/)",e);for(var r in e)this.addRule(r,e[r]);return this},addRule:function(e,t,i){var n=!1;i=i||1,n&&log('addRule: "'+e+'" : "'+t+'"       ['+Type.get(t)+"]");var r=t;is(t,A)||(r=t.split(RiGrammar.OR_PATT));for(var s=0;s<r.length;s++){var a=r[s],o=i,u=RiGrammar.PROB_PATT.exec(a);if(u){if(n)for(log("Found weight for "+a),s=0;s<u.length;s++)log("  "+s+") '"+u[s]+"'");a=u[1]+u[3],o=u[2],n&&log("weight="+o+" rule='"+a+"'")}if(this.hasRule(e)){n&&log("rule exists");var l=this._rules[e];l[a]=o}else{var c={};c[a]=o,this._rules[e]=c,n&&log("added rule: "+e)}}return this},removeRule:function(e){return delete this._rules[e],this},_copy:function(){var e=RiGrammar();for(var t in this._rules)e._rules[t]=this._rules[t];return e},reset:function(){return this._rules={},this},doRule:function(e){var t=0,i=E,n=this._rules[e];if(!n)return null;for(i in n)t++;return t?1==t?i:this._getStochasticRule(n):null},getGrammar:function(){var e=E;for(var t in this._rules){e+=t+"\n";var i=this._rules[t];for(var n in i)e+="  '"+n+"' ["+i[n]+"]\n"}return RiTa.chomp(e)},print:function(){if(console){var e="\n------------------------------";console.log(e+"\n"+this.getGrammar()+e)}return this},hasRule:function(e){return"undefined"!=typeof this._rules[e]},expandWith:function(e,t){var i,n=this._copy(),r=!1;for(i in n._rules)if(i===t){var s={};s[e]=1,n._rules[i]=s,r=!0}r||err("Rule '"+t+"' not found in grammar");var a,o=1e3;for(a=0;o>a;a++){var u=n.expand();if(u.indexOf(e)>-1)return u}err("RiGrammar failed to complete after "+a+" tries\n")},expand:function(e){return this.expandFrom(RiGrammar.START_RULE,e)},expandFrom:function(e,t){okeys(this._rules).length||err("(RiGrammar) No grammar rules found!"),this.hasRule(e)||err("Rule not found: "+e+"\nRules:\n"+JSON.stringify(this._rules));for(var i,n,r,s=0,a=1e3;++s<a;){var o=this._expandRule(e);if(o&&o.length)e=o;else{if(this.execDisabled)break;if(i=RiGrammar.EXEC_PATT.exec(e),!i||!i.length)break;if(i.length>2){if(n=i[2],2!=this._countTicks(n))return warn("Unable to parse recursive exec: "+n+"..."),null;if(r=this._handleExec(n,t),!r)break;e=i[1]+r,i.length>3&&(e+=i[3])}}}return s>=a&&log("[WARN] max number of iterations reached: "+a),RiTa.unescapeHTML(e)},_countTicks:function(e){for(var t=0,i=0;i<e.length;i++)"`"==e.charAt(i)&&t++;return t},openEditor:function(){return warn("Editor not yet implemented in JavaScript"),this},_handleExec:function(input,context){if(!input||!input.length)return null;var res,exec=input.replace(RiGrammar.STRIP_TICKS,"$1");try{return res=eval(exec),res?res+E:null}catch(e){var parts=exec.split("(");if(parts&&2==parts.length){var funName=parts[0],argStr=parts[1].replace(/\)/,E),g=context||RiText._graphics();if(g&&g[funName]&&is(g[funName],F)){var args=argStr.split(",");return res=g[funName].apply(g,args),res?res+E:null}}return warn("RiGrammar failed parsing: "+input+"\n  -> "+e.message),null}},_expandRule:function(e){var t,i,n,r,s,a=0;a&&log("_expandRule("+e+")");for(var o in this._rules)if(t=this._rules[o],a&&log("  name="+o+"  entry="+t+"  prod="+e+"  idx="+i),i=e.indexOf(o),i>=0)return n=e.substring(0,i)||E,r=this.doRule(o)||E,s=e.substring(i+o.length)||E,a&&log("  pre="+n+"  expanded="+r+"  post="+s+"  result="+n+r+s),n+r+s;return null},_getStochasticRule:function(e){var t,i=!1;i&&log("_getStochasticRule("+e+")");var n,r=Math.random(),s=0;for(t in e)s+=parseFloat(e[t]);i&&log("total="+s+"p="+r);for(t in e){i&&log("  name="+t);var a=e[t]/s;if(i&&log("amt="+a),a>r){n=t,i&&log("hit!="+t);break}r-=a}return n}};var LetterToSound=makeClass();LetterToSound.TOTAL="TOTAL",LetterToSound.INDEX="INDEX",LetterToSound.STATE="STATE",LetterToSound.PHONE="PHONE",LetterToSound.tokenizeOnLoad=!0,LetterToSound.tokenizeOnLookup=!1,LetterToSound.WINDOW_SIZE=4,LetterToSound.prototype={init:function(){if(this.letterIndex={},this.fval_buff=[],this.stateMachine=null,this.numStates=0,LetterToSound.RULES||(LetterToSound.RULES=_RiTa_LTS),!LetterToSound.RULES.length)throw Error("[RiTa] No LTS-rules found!");for(var e=0;e<LetterToSound.RULES.length;e++)this.parseAndAdd(LetterToSound.RULES[e])},_createState:function(e,t){if(e===LetterToSound.STATE){var i=parseInt(t.nextToken()),n=t.nextToken(),r=parseInt(t.nextToken()),s=parseInt(t.nextToken());return new DecisionState(i,n.charAt(0),r,s)}if(e===LetterToSound.PHONE)return new FinalState(t.nextToken());throw Error("Unexpected type: "+e)},parseAndAdd:function(e){var t=new StringTokenizer(e,SP),i=t.nextToken();if(i==LetterToSound.STATE||i==LetterToSound.PHONE)this.stateMachine[this.numStates]=LetterToSound.tokenizeOnLoad?this._createState(i,t):e,this.numStates++;else if(i==LetterToSound.INDEX){var n=parseInt(t.nextToken());if(n!=this.numStates)throw Error("Bad INDEX in file.");var r=t.nextToken();this.letterIndex[r]=n}else i==LetterToSound.TOTAL&&(this.stateMachine=[],this.stateMachineSize=parseInt(t.nextToken()))},getPhones:function(e,t){var i,n,r=[];if(t=t||"-",is(e,S)){if(!e.length)return E;e=RiTa.tokenize(e)}for(i=0;i<e.length;i++)n=this._computePhones(e[i]),r[i]=n?n.join(t):E;return r.join(t)},_computePhones:function(e){var t,i,n,r,s,a,o,u=[];if(!e||!e.length||RiTa.isPunctuation(e))return null;if(e=e.toLowerCase(),isNum(e)){e=e.length>1?e.split(E):[e];for(var l=0;l<e.length;l++){if(t=parseInt(e[l]),0>t||t>9)throw Error("Attempt to pass multi-digit number to LTS: '"+e+"'");u.push(RiString.phones.digits[t])}return u}n="000#"+e.trim()+"#000",i=n.split(E);for(var c=0;c<e.length;c++){for(var h=0;h<LetterToSound.WINDOW_SIZE;h++)this.fval_buff[h]=i[c+h],this.fval_buff[h+LetterToSound.WINDOW_SIZE]=i[h+c+1+LetterToSound.WINDOW_SIZE];if(o=e.charAt(c),s=this.letterIndex[o],!isNum(s))return warn("Unable to generate LTS for '"+e+"'\n       No LTS index for character: '"+o+"', isDigit="+isNum(o)+", isPunct="+RiTa.isPunctuation(o)),null;for(a=parseInt(s),r=this.getState(a);!(r instanceof FinalState);)a=r.getNextState(this.fval_buff),r=this.getState(a);r.append(u)}return u},getState:function(e){if(is(e,N)){var t=null;return is(this.stateMachine[e],S)?(t=this.getState(this.stateMachine[e]),LetterToSound.tokenizeOnLookup&&(this.stateMachine[e]=t)):t=this.stateMachine[e],t}var i=new StringTokenizer(e," ");return this.getState(i.nextToken(),i)}};var DecisionState=makeClass();DecisionState.TYPE=1,DecisionState.prototype={init:function(e,t,i,n){this.c=t,this.index=e,this.qtrue=i,this.qfalse=n},type:function(){return"DecisionState"},getNextState:function(e){return e[this.index]==this.c?this.qtrue:this.qfalse},toString:function(){return this.STATE+" "+this.index+" "+this.c+" "+this.qtrue+" "+this.qfalse}};var FinalState=makeClass();FinalState.TYPE=2,FinalState.prototype={init:function(e){if(this.phoneList=[],"epsilon"===e)this.phoneList=null;else if(is(e,A))this.phoneList=e;else{var t=e.indexOf("-");-1!=t?(this.phoneList[0]=e.substring(0,t),this.phoneList[1]=e.substring(t+1)):this.phoneList[0]=e}},type:function(){return"FinalState"},append:function(e){if(this.phoneList)for(var t=0;t<this.phoneList.length;t++)e.push(this.phoneList[t])},toString:function(){return this.phoneList?1==this.phoneList.length?LetterToSound.PHONE+" "+this.phoneList[0]:LetterToSound.PHONE+" "+this.phoneList[0]+"-"+this.phoneList[1]:LetterToSound.PHONE+" epsilon"}};var StringTokenizer=makeClass();StringTokenizer.prototype={init:function(e,t){this.idx=0,this.text=e,this.delim=t||" ",this.tokens=e.split(t)},nextToken:function(){return this.idx<this.tokens.length?this.tokens[this.idx++]:null}};var timers={},Timer=function(e,t,i){return this.timerImpl=isNode()?require("timers"):window,this.set=function(e,t,i){return this.init=!0,"function"==typeof e&&(this.action=e),isNaN(t)||(this.intervalTime=t),i&&!this.isActive&&(this.isActive=!0,this.setTimer()),this},this.once=function(e){var t=this;return isNaN(e)&&(e=0),this.timerImpl.setTimeout(function(){t.action()},e),this},this.play=function(e){return this.isActive||(e?this.setTimer():this.setTimer(this.remaining),this.isActive=!0),this},this.pause=function(){return this.isActive&&(this.isActive=!1,this.remaining-=new Date-this.last,this.clearTimer()),this},this.stop=function(){return this.isActive=!1,this.remaining=this.intervalTime,this.clearTimer(),this},this.toggle=function(e){return this.isActive?this.pause():e?this.play(!0):this.play(),this},this.reset=function(){return this.isActive=!1,this.play(!0),this},this.id=function(){return this.timeoutId},this.clearTimer=function(){this.timerImpl.clearTimeout(this.timeoutId)},this.setTimer=function(e){var t=this;"function"==typeof this.action&&(isNaN(e)&&(e=this.intervalTime),this.remaining=e,this.last=new Date,this.clearTimer(),this.timeoutId=this.timerImpl.setTimeout(function(){t.go()},e))},this.go=function(){this.isActive&&(this.action(),this.setTimer())},this.init?new Timer(e,t,i):this.set(e,t,i)},TextNode=makeClass();TextNode.prototype={init:function(e,t){this.count=0,this.children={},this.parent=e,this.token=t},pathFromRoot:function(e){for(var t=this;;){if(t.isRoot())break;e.push(t.token),t=t.parent}},selectChild:function(e,t){var i=t||!0;return this.children?this._select(this.childNodes(e),i):null},_select:function(e,t){if(!e)throw TypeError("bad arg to '_select()'");return t=t||!1,t?this._probabalisticSelect(e):e[Math.floor(Math.random()*e.length)]},_probabalisticSelect:function(e){if(!e)throw TypeError("bad arg to '_probabalisticSelect()'");if(!e.length)return null;if(1==e.length)return e[0];for(var t=0,i=Math.random(),n=0;n<e.length;n++)if(t+=e[n].probability(),t>i)return e[n];err("Invalid State in RiTa.probabalisticSelect()")},addChild:function(e,t){t=t||1;var i=this._key(e),n=this.children[i];return n?n.count++:(n=new TextNode(this,e),n.count=t,this.children[i]=n),n},asTree:function(e){var t=this.token+" ";return this.isRoot()||(t+="("+this.count+")->"),t+="{",this.isLeaf()?t+"}":this.childrenToString(this,t,1,e)},isRoot:function(){return!this.parent},isLeaf:function(){return 0===this.childCount()},probability:function(){return this.count/this.siblingCount()},childNodes:function(e){if(!this.children)return EA;e=is(e,S)?new RegExp(e):e;var t=[];for(var i in this.children){var n=this.children[i];(!e||n&&n.token&&n.token.search(e)>-1)&&t.push(n)}return t},siblingCount:function(){return this.isRoot()&&err("Illegal siblingCount on ROOT!"),this.parent||err("Null parent for: "+this.token),this.parent.childCount()},uniqueCount:function(){var e=0;for(var t in this.children)e++;return e},childCount:function(){if(!this.children)return 0;var e=0;for(var t in this.children)t&&this.children[t]&&(e+=this.children[t].count);return e},lookup:function(e){if(!e)return null;e=typeof e!=S&&e.token?e.token:e;var t=this._key(e);return e?this.children[t]:null},_key:function(e){return e},childrenToString:function(e,t,i,n){var r,s,a,o=e,u=[],l=null,c="\n";n=n||!1;for(a in e.children)u.push(e.children[a]);if(!u.length)return t;for(n&&u.sort(),s=0;i>s;s++)c+="  ";for(r=0;r<u.length&&(l=u[r],l);r++){var h=l.token;h&&("\n"==h&&(h="\\n"),"\r"==h&&(h="\\r"),"	"==h&&(h="\\t"),"\r\n"==h&&(h="\\r\\n")),t+=c+"'"+h+"'",l.count||err("ILLEGAL FREQ: "+l.count+" -> "+o.token+","+l.token),l.isRoot()||(t+=" ["+l.count+",p="+l.probability().toFixed(3)+"]->{"),l.children?t=this.childrenToString(l,t,i+1,n):t+="}"}for(c="\n",s=0;i-1>s;s++)c+="  ";return t+c+"}"},toString:function(){return"[ "+this.token+" ("+this.count+"/"+this.probability().toFixed(3)+"%)]"}};var Conjugator=makeClass();Conjugator.prototype={init:function(){this.perfect=this.progressive=this.passive=this.interrogative=!1,this.tense=RiTa.PRESENT_TENSE,this.person=RiTa.FIRST_PERSON,this.number=RiTa.SINGULAR,this.form=RiTa.NORMAL},conjugate:function(e,t){var i,n,r,s,a,o=[];if(!e||!e.length)return E;if(!t)return e;if(i=e.toLowerCase(),("am"===i||"are"===i||"is"===i||"was"===i||"were"===i)&&(i="be"),s=i,t.number&&(this.number=t.number),t.person&&(this.person=t.person),t.tense&&(this.tense=t.tense),t.form&&(this.form=t.form),t.passive&&(this.passive=t.passive),t.progressive&&(this.progressive=t.progressive),t.interrogative&&(this.interrogative=t.interrogative),t.perfect&&(this.perfect=t.perfect),this.form==RiTa.INFINITIVE&&(r="to"),this.tense==RiTa.FUTURE_TENSE&&(r="will"),this.passive&&(o.push(this.getPastParticiple(s)),s="be"),this.progressive&&(o.push(this.getPresentParticiple(s)),s="be"),this.perfect&&(o.push(this.getPastParticiple(s)),s="have"),r&&(o.push(s),s=null),s)if(this.form===RiTa.GERUND){var u=this.getPresentParticiple(s);o.push(u)}else this.interrogative&&"be"!=s&&o.length<1?o.push(s):(a=this.getVerbForm(s,this.tense,this.person,this.number),o.push(a));r&&o.push(r),n=E;for(var l=0;l<o.length;l++)n=o[l]+" "+n;return endsWith(n,"peted")&&err("Unexpected output: "+this.toString()),trim(n)},checkRules:function(e,t){var i,n=(e.name,e.rules),r=e.defaultRule||null;if(n||err("no rule: "+e.name+" of "+t),inArray(MODALS,t))return t;for(var s=0;s<n.length;s++)if(n[s].applies(t)){var a=n[s].fire(t);return a}return e.doubling&&inArray(VERB_CONS_DOUBLING,t)&&(t=this.doubleFinalConsonant(t)),i=r.fire(t)},doubleFinalConsonant:function(e){var t=e.charAt(e.length-1);return e+t},getPast:function(e,t,i){if("be"==e.toLowerCase())switch(i){case RiTa.SINGULAR:switch(t){case RiTa.FIRST_PERSON:break;case RiTa.THIRD_PERSON:return"was";case RiTa.SECOND_PERSON:return"were"}break;case RiTa.PLURAL:return"were"}var n=this.checkRules(PAST_TENSE_RULESET,e);return n},getPresent:function(e,t,i){if(t=t||this.person,i=i||this.number,t==RiTa.THIRD_PERSON&&i==RiTa.SINGULAR)return this.checkRules(PRESENT_TENSE_RULESET,e);if("be"==e){if(i!=RiTa.SINGULAR)return"are";switch(t){case RiTa.FIRST_PERSON:return"am";case RiTa.SECOND_PERSON:return"are";case RiTa.THIRD_PERSON:return"is"}}return e},getPresentParticiple:function(e){return strOk(e)?this.checkRules(PRESENT_PARTICIPLE_RULESET,e):E},getPastParticiple:function(e){var t=strOk(e)?this.checkRules(PAST_PARTICIPLE_RULESET,e):E;return t},getVerbForm:function(e,t,i,n){switch(t){case RiTa.PRESENT_TENSE:return this.getPresent(e,i,n);case RiTa.PAST_TENSE:return this.getPast(e,i,n);default:return e}},toString:function(){return"  ---------------------\n  Passive = "+this.passive+"\n  Perfect = "+this.perfect+"\n  Progressive = "+this.progressive+"\n  ---------------------\n  Number = "+this.number+"\n  Person = "+this.person+"\n  Tense = "+this.tense+"\n  ---------------------\n"}};var PosTagger={UNKNOWN:["???","unknown"],N:["n","NOUN_KEY"],V:["v","VERB_KEY"],R:["r","ADVERB_KEY"],A:["a","ADJECTIVE_KEY"],CC:["cc","Coordinating conjunction"],CD:["cd","Cardinal number"],DT:["dt","Determiner"],EX:["ex","Existential there"],FW:["fw","Foreign word"],IN:["in","Preposition or subordinating conjunction"],JJ:["jj","Adjective"],JJR:["jjr","Adjective, comparative"],JJS:["jjs","Adjective, superlative"],LS:["ls","List item marker"],MD:["md","Modal"],NN:["nn","Noun, singular or mass"],NNS:["nns","Noun, plural"],NNP:["nnp","Proper noun, singular"],NNPS:["nnps","Proper noun, plural"],PDT:["pdt","Predeterminer"],POS:["pos","Possessive ending"],PRP:["prp","Personal pronoun"],PRP$:["prp$","Possessive pronoun (prolog version PRP-S)"],RB:["rb","Adverb"],RBR:["rbr","Adverb, comparative"],RBS:["rbs","Adverb, superlative"],RP:["rp","Particle"],SYM:["sym","Symbol"],TO:["to","to"],UH:["uh","Interjection"],VB:["vb","Verb, base form"],VBD:["vbd","Verb, past tense"],VBG:["vbg","Verb, gerund or present participle"],VBN:["vbn","Verb, past participle"],VBP:["vbp","Verb, non-3rd person singular present"],VBZ:["vbz","Verb, 3rd person singular present"],WDT:["wdt","Wh-determiner"],WP:["wp","Wh-pronoun"],WP$:["wp$","Possessive wh-pronoun (prolog version WP-S)"],WRB:["wrb","Wh-adverb"],TAGS:["cc","cd","dt","ex","fw","in","jj","jjr","jjs","ls","md","nn","nns","nnp","nnps","pdt","pos","prp","prp$","rb","rbr","rbs","rp","sym","to","uh","vb","vbd","vbg","vbn","vbp","vbz","wdt","wp","wp$","wrb","unknown"],NOUNS:["nn","nns","nnp","nnps"],VERBS:["vb","vbd","vbg","vbn","vbp","vbz"],ADJ:["jj","jjr","jjs"],ADV:["rb","rbr","rbs","rp"],isVerb:function(e){return inArray(this.VERBS,e)},isNoun:function(e){return inArray(this.NOUNS,e)},isAdverb:function(e){return inArray(this.ADV,e)},isAdj:function(e){return inArray(this.ADJ,e)},isTag:function(e){return inArray(this.TAGS,e)},hasTag:function(e,t){ok(e,A);var i=e.join();return i.indexOf(t)>-1},tag:function(e){var t=[],i=[],n=RiLexicon();e=is(e,A)?e:[e];for(var r=0,s=e.length;s>r;r++)if(e[r].length<1)t.push(E);else if(1!=e[r].length){var a=n._getPosArr(e[r]);a&&a.length?(t.push(a[0]),i[r]=a):(i[r]=[],t.push(endsWith(e[r],"s")?"nns":"nn"))}else t.push(this._handleSingleLetter(e[r]));return this._applyContext(e,t,i)},_handleSingleLetter:function(e){var t=e;return"a"===e||"A"===e?t="dt":"I"===e?t="prp":e>="0"&&"9">=e&&(t="cd"),t},_applyContext:function(e,t,i){for(var n=startsWith,r=endsWith,s=0,a=0,o=e.length;o>a;a++)a>0&&"dt"==t[a-1]&&(n(t[a],"vb")?(s&&log("PosTagger: changing verb to noun: "+e[a]),t[a]="nn"):n(t[a],"rb")&&(s&&log("PosTagger: custom tagged '"+e[a]+"', "+t[a]),t[a]=t[a].length>2?"jj"+t[a].charAt(2):"jj",s&&log(" -> "+t[a]))),n(t[a],"n")&&!i[a]&&isNum(e[a])&&(t[a]="cd"),n(t[a],"n")&&r(e[a],"ed")&&(t[a]="vbn"),r(e[a],"ly")&&(t[a]="rb"),n(t[a],"nn")&&r(e[a],"al")&&"mammal"!=e[a]&&(t[a]="jj"),a>0&&n(t[a],"nn")&&equalsIgnoreCase(e[a-1],"would")&&(t[a]="vb"),"nn"==t[a]&&e[a].match(/^.*[^s]s$/)&&(NULL_PLURALS.applies(e[a])||(t[a]="nns")),n(t[a],"nn")&&r(e[a],"ing")&&(this.hasTag(i[a],"vb")?t[a]="vbg":s&&log("[RiTa] PosTagger tagged '"+e[a]+"' as "+t[a])),a>0&&"nns"==t[a]&&this.hasTag(i[a],"vbz")&&t[a-1].match(/^(nn|prp|nnp)$/)&&(t[a]="vbz"),n(t[a],"nn")&&e[a].charAt(0)==e[a].charAt(0).toUpperCase()&&(t[a]=r(t[a],"s")?"nnps":"nnp");return t}},Stemmer={};Stemmer.stem_Porter=function(){var e={ational:"ate",tional:"tion",enci:"ence",anci:"ance",izer:"ize",bli:"ble",alli:"al",entli:"ent",eli:"e",ousli:"ous",ization:"ize",ation:"ate",ator:"ate",alism:"al",iveness:"ive",fulness:"ful",ousness:"ous",aliti:"al",iviti:"ive",biliti:"ble",logi:"log"},t={icate:"ic",ative:"",alize:"al",iciti:"ic",ical:"ic",ful:"",ness:""},i="[^aeiou]",n="[aeiouy]",r=i+"[^aeiouy]*",s=n+"[aeiou]*",a="^("+r+")?"+s+r,o="^("+r+")?"+s+r+"("+s+")?$",u="^("+r+")?"+s+r+s+r,l="^("+r+")?"+n;return function(i){var s,c,h,p,d,g,f,R;return i.length<3?i:(p=i.substr(0,1),"y"==p&&(i=p+i.substr(1)),d=/^(.+?)(ss|i)es$/,g=/^(.+?)([^s])s$/,d.test(i)?i=i.replace(d,"$1$2"):g.test(i)&&(i=i.replace(g,"$1$2")),d=/^(.+?)eed$/,g=/^(.+?)(ed|ing)$/,d.test(i)?(s=d.exec(i),d=new RegExp(a),d.test(s[1])&&(d=/.$/,i=i.replace(d,E))):g.test(i)&&(s=g.exec(i),c=s[1],g=new RegExp(l),g.test(c)&&(i=c,g=/(at|bl|iz)$/,f=new RegExp("([^aeiouylsz])\\1$"),R=new RegExp("^"+r+n+"[^aeiouwxy]$"),g.test(i)?i+="e":f.test(i)?(d=/.$/,i=i.replace(d,E)):R.test(i)&&(i+="e"))),d=/^(.+?)y$/,d.test(i)&&(s=d.exec(i),c=s[1],d=new RegExp(l),d.test(c)&&(i=c+"i")),d=/^(.+?)(ational|tional|enci|anci|izer|bli|alli|entli|eli|ousli|ization|ation|ator|alism|iveness|fulness|ousness|aliti|iviti|biliti|logi)$/,d.test(i)&&(s=d.exec(i),c=s[1],h=s[2],d=new RegExp(a),d.test(c)&&(i=c+e[h])),d=/^(.+?)(icate|ative|alize|iciti|ical|ful|ness)$/,d.test(i)&&(s=d.exec(i),c=s[1],h=s[2],d=new RegExp(a),d.test(c)&&(i=c+t[h])),d=/^(.+?)(al|ance|ence|er|ic|able|ible|ant|ement|ment|ent|ou|ism|ate|iti|ous|ive|ize)$/,g=/^(.+?)(s|t)(ion)$/,d.test(i)?(s=d.exec(i),c=s[1],d=new RegExp(u),d.test(c)&&(i=c)):g.test(i)&&(s=g.exec(i),c=s[1]+s[2],g=new RegExp(u),g.test(c)&&(i=c)),d=/^(.+?)e$/,d.test(i)&&(s=d.exec(i),c=s[1],d=new RegExp(u),g=new RegExp(o),f=new RegExp("^"+r+n+"[^aeiouwxy]$"),(d.test(c)||g.test(c)&&!f.test(c))&&(i=c)),d=/ll$/,g=new RegExp(u),d.test(i)&&g.test(i)&&(d=/.$/,i=i.replace(d,E)),"y"==p&&(i=p.toLowerCase()+i.substr(1)),i)}}(),Stemmer.stem_Lancaster=function(){function e(e){return e.match(/^[aeiou]/)?e.length>1:e.length>2&&e.match(/[aeiouy]/)}function t(n,r){var s=n.substr(-1),a=i[s];if(a)for(var o=0;o<a.length;o++)if((r||!a[o].intact)&&n.substr(0-a[o].pattern.length)==a[o].pattern){var u=n.substr(0,n.length-a[o].size);if(a[o].appendage&&(u+=a[o].appendage),e(u))return n=u,a[o].continuation?t(u,!1):u}return n}var i={a:[{continuation:!1,intact:!0,pattern:"ia",size:"2"},{continuation:!1,intact:!0,pattern:"a",size:"1"}],b:[{continuation:!1,intact:!1,pattern:"bb",size:"1"}],c:[{appendage:"s",continuation:!1,intact:!1,pattern:"ytic",size:"3"},{continuation:!0,intact:!1,pattern:"ic",size:"2"},{appendage:"t",continuation:!0,intact:!1,pattern:"nc",size:"1"}],d:[{continuation:!1,intact:!1,pattern:"dd",size:"1"},{appendage:"y",continuation:!0,intact:!1,pattern:"ied",size:"3"},{appendage:"s",continuation:!1,intact:!1,pattern:"ceed",size:"2"},{continuation:!1,intact:!1,pattern:"eed",size:"1"},{continuation:!0,intact:!1,pattern:"ed",size:"2"},{continuation:!0,intact:!1,pattern:"hood",size:"4"}],e:[{continuation:!0,intact:!1,pattern:"e",size:"1"}],f:[{appendage:"v",continuation:!1,intact:!1,pattern:"lief",size:"1"},{continuation:!0,intact:!1,pattern:"if",size:"2"}],g:[{continuation:!0,intact:!1,pattern:"ing",size:"3"},{appendage:"y",continuation:!1,intact:!1,pattern:"iag",size:"3"},{continuation:!0,intact:!1,pattern:"ag",size:"2"},{continuation:!1,intact:!1,pattern:"gg",size:"1"}],h:[{continuation:!1,intact:!0,pattern:"th",size:"2"},{appendage:"c",continuation:!1,intact:!1,pattern:"guish",size:"5"},{continuation:!0,intact:!1,pattern:"ish",size:"3"}],i:[{continuation:!1,intact:!0,pattern:"i",size:"1"},{appendage:"y",continuation:!0,intact:!1,pattern:"i",size:"1"}],j:[{appendage:"d",continuation:!1,intact:!1,pattern:"ij",size:"1"},{appendage:"s",continuation:!1,intact:!1,pattern:"fuj",size:"1"},{appendage:"d",continuation:!1,intact:!1,pattern:"uj",size:"1"},{appendage:"d",continuation:!1,intact:!1,pattern:"oj",size:"1"},{appendage:"r",continuation:!1,intact:!1,pattern:"hej",size:"1"},{appendage:"t",continuation:!1,intact:!1,pattern:"verj",size:"1"},{appendage:"t",continuation:!1,intact:!1,pattern:"misj",size:"2"},{appendage:"d",continuation:!1,intact:!1,pattern:"nj",size:"1"},{appendage:"s",continuation:!1,intact:!1,pattern:"j",size:"1"}],l:[{continuation:!1,intact:!1,pattern:"ifiabl",size:"6"},{appendage:"y",continuation:!1,intact:!1,pattern:"iabl",size:"4"},{continuation:!0,intact:!1,pattern:"abl",size:"3"},{continuation:!1,intact:!1,pattern:"ibl",size:"3"},{appendage:"l",continuation:!0,intact:!1,pattern:"bil",size:"2"},{continuation:!1,intact:!1,pattern:"cl",size:"1"},{appendage:"y",continuation:!1,intact:!1,pattern:"iful",size:"4"},{continuation:!0,intact:!1,pattern:"ful",size:"3"},{continuation:!1,intact:!1,pattern:"ul",size:"2"},{continuation:!0,intact:!1,pattern:"ial",size:"3"},{continuation:!0,intact:!1,pattern:"ual",size:"3"},{continuation:!0,intact:!1,pattern:"al",size:"2"},{continuation:!1,intact:!1,pattern:"ll",size:"1"}],m:[{continuation:!1,intact:!1,pattern:"ium",size:"3"},{continuation:!1,intact:!0,pattern:"um",size:"2"},{continuation:!0,intact:!1,pattern:"ism",size:"3"},{continuation:!1,intact:!1,pattern:"mm",size:"1"}],n:[{appendage:"j",continuation:!0,intact:!1,pattern:"sion",size:"4"},{appendage:"c",continuation:!1,intact:!1,pattern:"xion",size:"4"},{continuation:!0,intact:!1,pattern:"ion",size:"3"},{continuation:!0,intact:!1,pattern:"ian",size:"3"},{continuation:!0,intact:!1,pattern:"an",size:"2"},{continuation:!1,intact:!1,pattern:"een",size:"0"},{continuation:!0,intact:!1,pattern:"en",size:"2"},{continuation:!1,intact:!1,pattern:"nn",size:"1"}],p:[{continuation:!0,intact:!1,pattern:"ship",size:"4"},{continuation:!1,intact:!1,pattern:"pp",size:"1"}],r:[{continuation:!0,intact:!1,pattern:"er",size:"2"},{continuation:!1,intact:!1,pattern:"ear",size:"0"},{continuation:!1,intact:!1,pattern:"ar",size:"2"},{continuation:!0,intact:!1,pattern:"or",size:"2"},{continuation:!0,intact:!1,pattern:"ur",size:"2"},{continuation:!1,intact:!1,pattern:"rr",size:"1"},{continuation:!0,intact:!1,pattern:"tr",size:"1"},{appendage:"y",continuation:!0,intact:!1,pattern:"ier",size:"3"}],s:[{appendage:"y",continuation:!0,intact:!1,pattern:"ies",size:"3"},{continuation:!1,intact:!1,pattern:"sis",size:"2"},{continuation:!0,intact:!1,pattern:"is",size:"2"},{continuation:!0,intact:!1,pattern:"ness",size:"4"},{continuation:!1,intact:!1,pattern:"ss",size:"0"},{continuation:!0,intact:!1,pattern:"ous",size:"3"},{continuation:!1,intact:!0,pattern:"us",size:"2"},{continuation:!0,intact:!0,pattern:"s",size:"1"},{continuation:!1,intact:!1,pattern:"s",size:"0"}],t:[{appendage:"y",continuation:!1,intact:!1,pattern:"plicat",size:"4"},{continuation:!0,intact:!1,pattern:"at",size:"2"},{continuation:!0,intact:!1,pattern:"ment",size:"4"},{continuation:!0,intact:!1,pattern:"ent",size:"3"},{continuation:!0,intact:!1,pattern:"ant",size:"3"},{appendage:"b",continuation:!1,intact:!1,pattern:"ript",size:"2"},{appendage:"b",continuation:!1,intact:!1,pattern:"orpt",size:"2"},{continuation:!1,intact:!1,pattern:"duct",size:"1"},{continuation:!1,intact:!1,pattern:"sumpt",size:"2"},{appendage:"i",continuation:!1,intact:!1,pattern:"cept",size:"2"},{appendage:"v",continuation:!1,intact:!1,pattern:"olut",size:"2"},{continuation:!1,intact:!1,pattern:"sist",size:"0"},{continuation:!0,intact:!1,pattern:"ist",size:"3"},{continuation:!1,intact:!1,pattern:"tt",size:"1"}],u:[{continuation:!1,intact:!1,pattern:"iqu",size:"3"},{continuation:!1,intact:!1,pattern:"ogu",size:"1"}],v:[{appendage:"j",continuation:!0,intact:!1,pattern:"siv",size:"3"},{continuation:!1,intact:!1,pattern:"eiv",size:"0"},{continuation:!0,intact:!1,pattern:"iv",size:"2"}],y:[{continuation:!0,intact:!1,pattern:"bly",size:"1"},{appendage:"y",continuation:!0,intact:!1,pattern:"ily",size:"3"},{continuation:!1,intact:!1,pattern:"ply",size:"0"},{continuation:!0,intact:!1,pattern:"ly",size:"2"},{continuation:!1,intact:!1,pattern:"ogy",size:"1"},{continuation:!1,intact:!1,pattern:"phy",size:"1"},{continuation:!1,intact:!1,pattern:"omy",size:"1"},{continuation:!1,intact:!1,pattern:"opy",size:"1"},{continuation:!0,intact:!1,pattern:"ity",size:"3"},{continuation:!0,intact:!1,pattern:"ety",size:"3"},{continuation:!1,intact:!1,pattern:"lty",size:"2"},{continuation:!1,intact:!1,pattern:"istry",size:"5"},{continuation:!0,intact:!1,pattern:"ary",size:"3"},{continuation:!0,intact:!1,pattern:"ory",size:"3"},{continuation:!1,intact:!1,pattern:"ify",size:"3"},{appendage:"t",continuation:!0,intact:!1,pattern:"ncy",size:"2"},{continuation:!0,intact:!1,pattern:"acy",size:"3"}],z:[{continuation:!0,intact:!1,pattern:"iz",size:"2"},{appendage:"s",continuation:!1,intact:!1,pattern:"yz",size:"1"}]};return function(e){return t(e.toLowerCase(),!0)}}(),Array.prototype._arrayContains=function(e){return Array.prototype.indexOf(e)>-1},String.prototype._endsWith=function(e){return-1!==this.indexOf(e,this.length-e.length)},Stemmer.stem_Pling=function(){
function e(e,t){return e.substring(0,e.length-t.length)}function t(e){return e.indexOf("h")>0||e.indexOf("j")>0||e.indexOf("k")>0||e.indexOf("w")>0||e.indexOf("y")>0||e.indexOf("z")>0||e.indexOf("ou")>0||e.indexOf("sh")>0||e.indexOf("ch")>0||e._endsWith("aus")}function i(e){return e.indexOf("ph")>0||e.indexOf("y")>0&&e._endsWith("nges")}function n(n){if(!strOk(n))return E;var w=v[n];return w?w:o._arrayContains(n)?e(n,"a")+"on":a._arrayContains(n)?e(n,"a")+"um":c._arrayContains(n)?e(n,"ices")+"ix":u._arrayContains(n)?e(n,"i")+"o":r._arrayContains(n)?e(n,"s"):h._arrayContains(n)||n._endsWith("theses")?e(n,"es")+"is":l._arrayContains(n)?e(n,"i")+"us":n._endsWith("uses")&&(l._arrayContains(e(n,"uses")+"i")||"genuses"===n||"corpuses"===n)?e(n,"es"):d._arrayContains(n)?e(n,"ices")+"ex":n._endsWith("ois")||n._endsWith("itis")||s._arrayContains(n)||m._arrayContains(n)?n:n._endsWith("ina")?e(n,"en"):n._endsWith("ae")?e(n,"e"):n._endsWith("ata")?e(n,"ta"):n._endsWith("trices")?e(n,"trices")+"trix":!n._endsWith("us")||n._endsWith("eaus")||n._endsWith("ieus")||t(n)||g._arrayContains(n)?n._endsWith("teeth")?e(n,"teeth")+"tooth":n._endsWith("geese")?e(n,"geese")+"goose":n._endsWith("feet")?e(n,"feet")+"foot":n._endsWith("zoa")?e(n,"zoa")+"zoon":n._endsWith("eaux")?e(n,"x"):n._endsWith("ieux")?e(n,"x"):n._endsWith("nges")&&i(n)?e(n,"nges")+"nx":n._endsWith("shes")||n._endsWith("ches")&&!R._arrayContains(n)?e(n,"es"):!n._endsWith("sses")||f._arrayContains(n)||n._endsWith("mousses")?n._endsWith("xes")&&"axes"!==n?e(n,"es"):n._endsWith("nives")||n._endsWith("lives")&&!n._endsWith("olives")||n._endsWith("wives")?e(n,"ves")+"fe":n._endsWith("alves")&&!n._endsWith("valves")||n._endsWith("olves")&&!n._endsWith("solves")||n._endsWith("eaves")&&!n._endsWith("heaves")&&!n._endsWith("weaves")||n._endsWith("arves")?e(n,"ves")+"f":n._endsWith("ies")&&!b._arrayContains(n)?e(n,"ies")+"y":n._endsWith("oes")&&!p._arrayContains(n)?e(n,"es"):n._endsWith("ses")||n._endsWith("zes")?e(n,"es"):!n._endsWith("s")||n._endsWith("ss")||n._endsWith("is")?n:e(n,"s"):e(n,"es"):n}var r=["nurses","cruises"],s=["alias","asbestos","atlas","barracks","bathos","bias","breeches","britches","canvas","chaos","clippers","contretemps","corps","cosmos","crossroads","diabetes","ethos","gallows","gas","graffiti","headquarters","herpes","high-jinks","innings","jackanapes","lens","means","measles","mews","mumps","news","pathos","pincers","pliers","proceedings","rabies","rhinoceros","sassafras","scissors","series","shears","species","tuna"],a=["addenda","agenda","aquaria","bacteria","candelabra","compendia","consortia","crania","curricula","data","desiderata","dicta","emporia","enconia","errata","extrema","gymnasia","honoraria","interregna","lustra","maxima","media","memoranda","millenia","minima","momenta","optima","ova","phyla","quanta","rostra","spectra","specula","stadia","strata","symposia","trapezia","ultimata","vacua","vela"],o=["aphelia","asyndeta","automata","criteria","hyperbata","noumena","organa","perihelia","phenomena","prolegomena"],u=["alti","bassi","canti","contralti","crescendi","libretti","soli","soprani","tempi","virtuosi"],l=["alumni","bacilli","cacti","foci","fungi","genii","hippopotami","incubi","nimbi","nuclei","nucleoli","octopi","radii","stimuli","styli","succubi","syllabi","termini","tori","umbilici","uteri"],c=["appendices","cervices"],h=["analyses","axes","bases","crises","diagnoses","ellipses","em_PHASEs","neuroses","oases","paralyses","synopses"],p=["aloes","backhoes","beroes","canoes","chigoes","cohoes","does","felloes","floes","foes","gumshoes","hammertoes","hoes","hoopoes","horseshoes","leucothoes","mahoes","mistletoes","oboes","overshoes","pahoehoes","pekoes","roes","shoes","sloes","snowshoes","throes","tic-tac-toes","tick-tack-toes","ticktacktoes","tiptoes","tit-tat-toes","toes","toetoes","tuckahoes","woes"],d=["apices","codices","cortices","indices","latices","murices","pontifices","silices","simplices","vertices","vortices"],g=["apercus","barbus","cornus","ecrus","emus","fondus","gnus","iglus","mus","nandus","napus","poilus","quipus","snafus","tabus","tamandus","tatus","timucus","tiramisus","tofus","tutus"],f=["bouillabaisses","coulisses","crevasses","crosses","cuisses","demitasses","ecrevisses","fesses","finesses","fosses","impasses","lacrosses","largesses","masses","noblesses","palliasses","pelisses","politesses","posses","tasses","wrasses"],R=["adrenarches","attaches","avalanches","barouches","brioches","caches","caleches","caroches","cartouches","cliches","cloches","creches","demarches","douches","gouaches","guilloches","headaches","heartaches","huaraches","menarches","microfiches","moustaches","mustaches","niches","panaches","panoches","pastiches","penuches","pinches","postiches","psyches","quiches","schottisches","seiches","soutaches","synecdoches","thelarches","troches"],m=["aerobatics","aerobics","aerodynamics","aeromechanics","aeronautics","alphanumerics","animatronics","apologetics","architectonics","astrodynamics","astronautics","astrophysics","athletics","atmospherics","autogenics","avionics","ballistics","bibliotics","bioethics","biometrics","bionics","bionomics","biophysics","biosystematics","cacogenics","calisthenics","callisthenics","catoptrics","civics","cladistics","cryogenics","cryonics","cryptanalytics","cybernetics","cytoarchitectonics","cytogenetics","diagnostics","dietetics","dramatics","dysgenics","econometrics","economics","electromagnetics","electronics","electrostatics","endodontics","enterics","ergonomics","eugenics","eurhythmics","eurythmics","exodontics","fibreoptics","futuristics","genetics","genomics","geographics","geophysics","geopolitics","geriatrics","glyptics","graphics","gymnastics","hermeneutics","histrionics","homiletics","hydraulics","hydrodynamics","hydrokinetics","hydroponics","hydrostatics","hygienics","informatics","kinematics","kinesthetics","kinetics","lexicostatistics","linguistics","lithoglyptics","liturgics","logistics","macrobiotics","macroeconomics","magnetics","magnetohydrodynamics","mathematics","metamathematics","metaphysics","microeconomics","microelectronics","mnemonics","morphophonemics","neuroethics","neurolinguistics","nucleonics","numismatics","obstetrics","onomastics","orthodontics","orthopaedics","orthopedics","orthoptics","paediatrics","patristics","patristics","pedagogics","pediatrics","periodontics","pharmaceutics","pharmacogenetics","pharmacokinetics","phonemics","phonetics","phonics","photomechanics","physiatrics","pneumatics","poetics","politics","pragmatics","prosthetics","prosthodontics","proteomics","proxemics","psycholinguistics","psychometrics","psychonomics","psychophysics","psychotherapeutics","robotics","semantics","semiotics","semitropics","sociolinguistics","stemmatics","strategics","subtropics","systematics","tectonics","telerobotics","therapeutics","thermionics","thermodynamics","thermostatics"],b=["aeries","anomies","aunties","baddies","beanies","birdies","boccies","bogies","bolshies","bombies","bonhomies","bonxies","booboisies","boogies","boogie-woogies","bookies","booties","bosies","bourgeoisies","brasseries","brassies","brownies","budgies","byrnies","caddies","calories","camaraderies","capercaillies","capercailzies","cassies","catties","causeries","charcuteries","chinoiseries","collies","commies","cookies","coolies","coonties","cooties","corries","coteries","cowpies","cowries","cozies","crappies","crossties","curies","dachsies","darkies","dassies","dearies","dickies","dies","dixies","doggies","dogies","dominies","dovekies","eyries","faeries","falsies","floozies","folies","foodies","freebies","gaucheries","gendarmeries","genies","ghillies","gillies","goalies","goonies","grannies","grotesqueries","groupies","hankies","hippies","hoagies","honkies","hymies","indies","junkies","kelpies","kilocalories","knobkerries","koppies","kylies","laddies","lassies","lies","lingeries","magpies","magpies","marqueteries","mashies","mealies","meanies","menageries","millicuries","mollies","facts1","moxies","neckties","newbies","nighties","nookies","oldies","organdies","panties","parqueteries","passementeries","patisseries","pies","pinkies","pixies","porkpies","potpies","prairies","preemies","premies","punkies","pyxies","quickies","ramies","reveries","rookies","rotisseries","scrapies","sharpies","smoothies","softies","stoolies","stymies","swaggies","sweeties","talkies","techies","ties","tooshies","toughies","townies","veggies","walkie-talkies","wedgies","weenies","weirdies","yardies","yuppies","zombies"],v=["beefs","beef","beeves","beef","brethren","brother","busses","bus","cattle","cattlebeast","children","child","corpora","corpus","ephemerides","ephemeris","firemen","fireman","genera","genus","genies","genie","genii","genie","kine","cow","lice","louse","men","man","mice","mouse","mongooses","mongoose","monies","money","mythoi","mythos","octopodes","octopus","octopuses","octopus","oxen","ox","people","person","soliloquies","soliloquy","throes","throes","trilbys","trilby","women","woman"];return function(e){return n(e.toLowerCase())}}();var MinEditDist={_min3:function(e,t,i){var n=e;return n>t&&(n=t),n>i&&(n=i),n},_computeRawArray:function(e,t){var i,n,r,s,a,o,u,l=[];if(!e.length)return t.length;if(!t.length)return e.length;for(s=0,o=e.length;o>=s;s++)l[s]=[],l[s][0]=s;for(a=0,u=t.length;u>=a;a++)l[0][a]=a;for(s=1,o=e.length;o>=s;s++)for(i=e[s-1],a=1,u=t.length;u>=a;a++)n=t[a-1],r=i===n?0:1,l[s][a]=this._min3(l[s-1][a]+1,l[s][a-1]+1,l[s-1][a-1]+r);return l[e.length][t.length]},computeRaw:function(e,t){if(is(e,A))return this._computeRawArray(e,t);if(!e.length&&!t.length)return 0;var i,n,r,s,a,o=[],u=e.length,l=t.length;if(!u)return l;if(!l)return u;for(i=0;u>=i;i++)o[i]=[],o[i][0]=i;for(n=0;l>=n;n++)o[0][n]=n;for(i=1;u>=i;i++)for(s=e.charAt(i-1),n=1;l>=n;n++)a=t.charAt(n-1),r=s==a?0:1,o[i][n]=this._min3(o[i-1][n]+1,o[i][n-1]+1,o[i-1][n-1]+r);return o[u][l]},computeAdjusted:function(e,t){var i=Type.get(e),n=Type.get(e);if(i===n){if(n===S)return e.length||t.length?this.computeRaw(e,t)/Math.max(e.length,t.length):0;if(n===A)return e.length||t.length?this._computeRawArray(e,t)/Math.max(e.length,t.length):0}err("Unexpected args: "+e+"/"+t)}},RE=makeClass();RE.prototype={init:function(e,t,i){this.regex=new RegExp(e),this.offset=t,this.suffix=i},applies:function(e){return this.regex.test(trim(e))},fire:function(e){return this.truncate(trim(e))+this.suffix},analyze:function(e){return this.suffix!=E&&endsWith(e,this.suffix)?!0:!1},truncate:function(e){return 0===this.offset?e:e.substr(0,e.length-this.offset)}};var QUESTION_STARTS=["Was","What","When","Where","How","Which","If","Who","Is","Could","Might","Will","Does","Why","Are"],W_QUESTION_STARTS=["Was","What","When","Where","How","Which","Why","Who","Will"],PUNCTUATION_CLASS=/[`~\"\/'_\-[\]{}()*+!?%&.,\\^$|#@<>|+=;:]/g,ONLY_PUNCT=/^[^0-9A-Za-z\s]*$/,RiTextCallbacksDisabled=!1,DEFAULT_PLURAL_RULE=RE("^((\\w+)(-\\w+)*)(\\s((\\w+)(-\\w+)*))*$",0,"s"),ALL_PUNCT=/^[-[\]{}()*+!?%&.,\\^$|#@<>|+=;:]+$/g,DeLiM=":DeLiM:",SP=" ",E="",N=Type.N,S=Type.S,O=Type.O,A=Type.A,B=Type.B,R=Type.R,F=Type.F,EA=[],NULL_PLURALS=RE("^(bantu|bengalese|bengali|beninese|boche|bonsai|digitalis|mess|burmese|chinese|colossus|congolese|discus|emphasis|gabonese|guyanese|japanese|javanese|lebanese|maltese|olympics|portuguese|senegalese|siamese|singhalese|innings|sinhalese|sioux|sudanese|swiss|taiwanese|togolese|vietnamese|aircraft|anopheles|apparatus|asparagus|barracks|bellows|bison|bluefish|bob|bourgeois|bream|brill|butterfingers|cargo|carp|catfish|chassis|clothes|chub|cod|codfish|coley|contretemps|corps|crawfish|crayfish|crossroads|cuttlefish|dace|deer|dice|dogfish|doings|dory|downstairs|eldest|earnings|economics|electronics|finnan|firstborn|fish|flatfish|flounder|fowl|fry|fries|works|globefish|goldfish|golf|grand|grief|gudgeon|gulden|haddock|hake|halibut|headquarters|herring|hertz|horsepower|goods|hovercraft|hundredweight|ironworks|jackanapes|kilohertz|kurus|kwacha|ling|lungfish|mackerel|means|megahertz|moorfowl|moorgame|mullet|nepalese|offspring|pampas|parr|pants|patois|pekinese|penn'orth|perch|pickerel|pike|pince-nez|plaice|precis|quid|rand|rendezvous|revers|roach|roux|salmon|samurai|series|seychelles|seychellois|shad|sheep|shellfish|smelt|spacecraft|species|starfish|stockfish|sunfish|superficies|sweepstakes|swordfish|tench|tennis|[a-z]+osis|[a-z]+itis|[a-z]+ness|tobacco|tope|triceps|trout|tuna|tunafish|tunny|turbot|trousers|undersigned|veg|waterfowl|waterworks|waxworks|whiting|wildfowl|woodworm|yen|aries|pisces|forceps|lieder|jeans|physics|mathematics|news|odds|politics|remains|surroundings|thanks|statistics|goods|aids|wildlife)$",0,E),SINGULAR_RULES=[NULL_PLURALS,RE("^(oxen|buses)$",2,E),RE("^(toes|taxis)$",1,E),RE("^series$",0,E),RE("(men|women)$",2,"an"),RE("^[lm]ice$",3,"ouse"),RE("^children",3,E),RE("^(appendices|indices|matrices)",3,"x"),RE("^(stimuli|alumni)$",1,"us"),RE("^(data)$",1,"um"),RE("^(memoranda|bacteria|curricula|minima|maxima|referenda|spectra|phenomena|criteria)$",1,"um"),RE("monies",3,"ey"),RE("people",4,"rson"),RE("^meninges|phalanges$",3,"x"),RE("schemata$",2,"s"),RE("^corpora$",3,"us"),RE("^(curi|formul|vertebr|larv|uln|alumn|signor|alg)ae$",1,E),RE("^apices|cortices$",4,"ex"),RE("^teeth$",4,"ooth"),RE("^feet$",3,"oot"),RE("femora",3,"ur"),RE("geese",4,"oose"),RE("crises",2,"is"),RE("(human|german|roman)$",0,"s")],C="[bcdfghjklmnpqrstvwxyz]",VL="[lraeiou]",PLURAL_RULES=[NULL_PLURALS,RE("^(piano|photo|solo|ego|tobacco|cargo|golf|grief)$",0,"s"),RE("^(wildlife)$",0,"s"),RE(C+"o$",0,"es"),RE(C+"y$",1,"ies"),RE("^ox$",0,"en"),RE("^(stimulus|alumnus)$",2,"i"),RE("^corpus$",2,"ora"),RE("(xis|sis)$",2,"es"),RE("([zsx]|ch|sh)$",0,"es"),RE(VL+"fe$",2,"ves"),RE(VL+"f$",1,"ves"),RE("(eu|eau)$",0,"x"),RE("(man|woman)$",2,"en"),RE("money$",2,"ies"),RE("person$",4,"ople"),RE("motif$",0,"s"),RE("^meninx|phalanx$",1,"ges"),RE("schema$",0,"ta"),RE("^bus$",0,"ses"),RE("child$",0,"ren"),RE("^(curi|formul|vertebr|larv|uln|alumn|signor|alg)a$",0,"e"),RE("^(maharaj|raj|myn|mull)a$",0,"hs"),RE("^aide-de-camp$",8,"s-de-camp"),RE("^apex|cortex$",2,"ices"),RE("^weltanschauung$",0,"en"),RE("^lied$",0,"er"),RE("^tooth$",4,"eeth"),RE("^[lm]ouse$",4,"ice"),RE("^foot$",3,"eet"),RE("femur",2,"ora"),RE("goose",4,"eese"),RE("(human|german|roman)$",0,"s"),RE("^(monarch|loch|stomach)$",0,"s"),RE("^(taxi|chief|proof|ref|relief|roof|belief)$",0,"s"),RE("^(co|no)$",0,"'s"),RE("^blond$",0,"es"),RE("^(memorandum|bacterium|curriculum|minimum|maximum|referendum|spectrum|phenomenon|criterion)$",2,"a"),RE("^(appendix|index|matrix)",2,"ices")],ANY_STEM="^((\\w+)(-\\w+)*)(\\s((\\w+)(-\\w+)*))*$",CONS="[bcdfghjklmnpqrstvwxyz]",VERBAL_PREFIX="((be|with|pre|un|over|re|mis|under|out|up|fore|for|counter|co|sub)(-?))",AUXILIARIES=["do","have","be"],MODALS=["shall","would","may","might","ought","should"],SYMBOLS=["!","?","$","%","*","+","-","="],ING_FORM_RULES=[RE(CONS+"ie$",2,"ying",1),RE("[^ie]e$",1,"ing",1),RE("^bog-down$",5,"ging-down",0),RE("^chivy$",1,"vying",0),RE("^trek$",1,"cking",0),RE("^bring$",0,"ing",0),RE("^be$",0,"ing",0),RE("^age$",1,"ing",0),RE("(ibe)$",1,"ing",0)],PAST_PARTICIPLE_RULES=[RE(CONS+"y$",1,"ied",1),RE("^"+VERBAL_PREFIX+"?(bring)$",3,"ought",0),RE("^"+VERBAL_PREFIX+"?(take|rise|strew|blow|draw|drive|know|give|arise|gnaw|grave|grow|hew|know|mow|see|sew|throw|prove|saw|quartersaw|partake|sake|shake|shew|show|shrive|sightsee|strew|strive)$",0,"n",0),RE("^"+VERBAL_PREFIX+"?[gd]o$",0,"ne",1),RE("^(beat|eat|be|fall)$",0,"en",0),RE("^(have)$",2,"d",0),RE("^"+VERBAL_PREFIX+"?bid$",0,"den",0),RE("^"+VERBAL_PREFIX+"?[lps]ay$",1,"id",1),RE("^behave$",0,"d",0),RE("^"+VERBAL_PREFIX+"?have$",2,"d",1),RE("(sink|slink|drink|shrink|stink)$",3,"unk",0),RE("(([sfc][twlp]?r?|w?r)ing|hang)$",3,"ung",0),RE("^"+VERBAL_PREFIX+"?(shear|swear|bear|wear|tear)$",3,"orn",0),RE("^"+VERBAL_PREFIX+"?(bend|spend|send|lend)$",1,"t",0),RE("^"+VERBAL_PREFIX+"?(weep|sleep|sweep|creep|keep$)$",2,"pt",0),RE("^"+VERBAL_PREFIX+"?(sell|tell)$",3,"old",0),RE("^(outfight|beseech)$",4,"ought",0),RE("^bethink$",3,"ought",0),RE("^buy$",2,"ought",0),RE("^aby$",1,"ought",0),RE("^tarmac",0,"ked",0),RE("^abide$",3,"ode",0),RE("^"+VERBAL_PREFIX+"?(speak|(a?)wake|break)$",3,"oken",0),RE("^backbite$",1,"ten",0),RE("^backslide$",1,"den",0),RE("^become$",3,"ame",0),RE("^begird$",3,"irt",0),RE("^outlie$",2,"ay",0),RE("^rebind$",3,"ound",0),RE("^relay$",2,"aid",0),RE("^shit$",3,"hat",0),RE("^bereave$",4,"eft",0),RE("^foreswear$",3,"ore",0),RE("^overfly$",1,"own",0),RE("^beget$",2,"otten",0),RE("^begin$",3,"gun",0),RE("^bestride$",1,"den",0),RE("^bite$",1,"ten",0),RE("^bleed$",4,"led",0),RE("^bog-down$",5,"ged-down",0),RE("^bind$",3,"ound",0),RE("^(.*)feed$",4,"fed",0),RE("^breed$",4,"red",0),RE("^brei",0,"d",0),RE("^bring$",3,"ought",0),RE("^build$",1,"t",0),RE("^come",0,E,0),RE("^catch$",3,"ught",0),RE("^chivy$",1,"vied",0),RE("^choose$",3,"sen",0),RE("^cleave$",4,"oven",0),RE("^crossbreed$",4,"red",0),RE("^deal",0,"t",0),RE("^dow$",1,"ught",0),RE("^dream",0,"t",0),RE("^dig$",3,"dug",0),RE("^dwell$",2,"lt",0),RE("^enwind$",3,"ound",0),RE("^feel$",3,"elt",0),RE("^flee$",2,"ed",0),RE("^floodlight$",5,"lit",0),RE("^fly$",1,"own",0),RE("^forbear$",3,"orne",0),RE("^forerun$",3,"ran",0),RE("^forget$",2,"otten",0),RE("^fight$",4,"ought",0),RE("^find$",3,"ound",0),RE("^freeze$",4,"ozen",0),RE("^gainsay$",2,"aid",0),RE("^gin$",3,"gan",0),RE("^gen-up$",3,"ned-up",0),RE("^ghostwrite$",1,"ten",0),RE("^get$",2,"otten",0),RE("^grind$",3,"ound",0),RE("^hacksaw",0,"n",0),RE("^hear",0,"d",0),RE("^hold$",3,"eld",0),RE("^hide$",1,"den",0),RE("^honey$",2,"ied",0),RE("^inbreed$",4,"red",0),RE("^indwell$",3,"elt",0),RE("^interbreed$",4,"red",0),RE("^interweave$",4,"oven",0),RE("^inweave$",4,"oven",0),RE("^ken$",2,"ent",0),RE("^kneel$",3,"elt",0),RE("^lie$",2,"ain",0),RE("^leap$",0,"t",0),RE("^learn$",0,"t",0),RE("^lead$",4,"led",0),RE("^leave$",4,"eft",0),RE("^light$",5,"lit",0),RE("^lose$",3,"ost",0),RE("^make$",3,"ade",0),RE("^mean",0,"t",0),RE("^meet$",4,"met",0),RE("^misbecome$",3,"ame",0),RE("^misdeal$",2,"alt",0),RE("^mishear$",1,"d",0),RE("^mislead$",4,"led",0),RE("^misunderstand$",3,"ood",0),RE("^outbreed$",4,"red",0),RE("^outrun$",3,"ran",0),RE("^outride$",1,"den",0),RE("^outshine$",3,"one",0),RE("^outshoot$",4,"hot",0),RE("^outstand$",3,"ood",0),RE("^outthink$",3,"ought",0),RE("^outgo$",2,"went",0),RE("^overbear$",3,"orne",0),RE("^overbuild$",3,"ilt",0),RE("^overcome$",3,"ame",0),RE("^overfly$",2,"lew",0),RE("^overhear$",2,"ard",0),RE("^overlie$",2,"ain",0),RE("^overrun$",3,"ran",0),RE("^override$",1,"den",0),RE("^overshoot$",4,"hot",0),RE("^overwind$",3,"ound",0),RE("^overwrite$",1,"ten",0),RE("^plead$",2,"d",0),RE("^rebuild$",3,"ilt",0),RE("^red$",3,"red",0),RE("^redo$",1,"one",0),RE("^remake$",3,"ade",0),RE("^resit$",3,"sat",0),RE("^rethink$",3,"ought",0),RE("^rewind$",3,"ound",0),RE("^rewrite$",1,"ten",0),RE("^ride$",1,"den",0),RE("^reeve$",4,"ove",0),RE("^sit$",3,"sat",0),RE("^shoe$",3,"hod",0),RE("^shine$",3,"one",0),RE("^shoot$",4,"hot",0),RE("^ski$",1,"i'd",0),RE("^slide$",1,"den",0),RE("^smite$",1,"ten",0),RE("^seek$",3,"ought",0),RE("^spit$",3,"pat",0),RE("^speed$",4,"ped",0),RE("^spellbind$",3,"ound",0),RE("^spoil$",2,"ilt",0),RE("^spotlight$",5,"lit",0),RE("^spin$",3,"pun",0),RE("^steal$",3,"olen",0),RE("^stand$",3,"ood",0),RE("^stave$",3,"ove",0),RE("^stride$",1,"den",0),RE("^strike$",3,"uck",0),RE("^stick$",3,"uck",0),RE("^swell$",3,"ollen",0),RE("^swim$",3,"wum",0),RE("^teach$",4,"aught",0),RE("^think$",3,"ought",0),RE("^tread$",3,"odden",0),RE("^typewrite$",1,"ten",0),RE("^unbind$",3,"ound",0),RE("^underbuy$",2,"ought",0),RE("^undergird$",3,"irt",0),RE("^undergo$",1,"one",0),RE("^underlie$",2,"ain",0),RE("^undershoot$",4,"hot",0),RE("^understand$",3,"ood",0),RE("^unfreeze$",4,"ozen",0),RE("^unlearn",0,"t",0),RE("^unmake$",3,"ade",0),RE("^unreeve$",4,"ove",0),RE("^unstick$",3,"uck",0),RE("^unteach$",4,"aught",0),RE("^unthink$",3,"ought",0),RE("^untread$",3,"odden",0),RE("^unwind$",3,"ound",0),RE("^upbuild$",1,"t",0),RE("^uphold$",3,"eld",0),RE("^upheave$",4,"ove",0),RE("^waylay$",2,"ain",0),RE("^whipsaw$",2,"awn",0),RE("^withhold$",3,"eld",0),RE("^withstand$",3,"ood",0),RE("^win$",3,"won",0),RE("^wind$",3,"ound",0),RE("^weave$",4,"oven",0),RE("^write$",1,"ten",0),RE("^trek$",1,"cked",0),RE("^ko$",1,"o'd",0),RE("^win$",2,"on",0),RE("e$",0,"d",1),RE("^"+VERBAL_PREFIX+"?(cast|thrust|typeset|cut|bid|upset|wet|bet|cut|hit|hurt|inset|let|cost|burst|beat|beset|set|upset|hit|offset|put|quit|wed|typeset|wed|spread|split|slit|read|run|rerun|shut|shed)$",0,E,0)],PAST_TENSE_RULES=[RE("^(reduce)$",0,"d",0),RE("e$",0,"d",1),RE("^"+VERBAL_PREFIX+"?[pls]ay$",1,"id",1),RE(CONS+"y$",1,"ied",1),RE("^(fling|cling|hang)$",3,"ung",0),RE("(([sfc][twlp]?r?|w?r)ing)$",3,"ang",1),RE("^"+VERBAL_PREFIX+"?(bend|spend|send|lend|spend)$",1,"t",0),RE("^"+VERBAL_PREFIX+"?lie$",2,"ay",0),RE("^"+VERBAL_PREFIX+"?(weep|sleep|sweep|creep|keep)$",2,"pt",0),RE("^"+VERBAL_PREFIX+"?(sell|tell)$",3,"old",0),RE("^"+VERBAL_PREFIX+"?do$",1,"id",0),RE("^"+VERBAL_PREFIX+"?dig$",2,"ug",0),RE("^behave$",0,"d",0),RE("^(have)$",2,"d",0),RE("(sink|drink)$",3,"ank",0),RE("^swing$",3,"ung",0),RE("^be$",2,"was",0),RE("^outfight$",4,"ought",0),RE("^tarmac",0,"ked",0),RE("^abide$",3,"ode",0),RE("^aby$",1,"ought",0),RE("^become$",3,"ame",0),RE("^begird$",3,"irt",0),RE("^outlie$",2,"ay",0),RE("^rebind$",3,"ound",0),RE("^shit$",3,"hat",0),RE("^bereave$",4,"eft",0),RE("^foreswear$",3,"ore",0),RE("^bename$",3,"empt",0),RE("^beseech$",4,"ought",0),RE("^bethink$",3,"ought",0),RE("^bleed$",4,"led",0),RE("^bog-down$",5,"ged-down",0),RE("^buy$",2,"ought",0),RE("^bind$",3,"ound",0),RE("^(.*)feed$",4,"fed",0),RE("^breed$",4,"red",0),RE("^brei$",2,"eid",0),RE("^bring$",3,"ought",0),RE("^build$",3,"ilt",0),RE("^come$",3,"ame",0),RE("^catch$",3,"ught",0),RE("^clothe$",5,"lad",0),RE("^crossbreed$",4,"red",0),RE("^deal$",2,"alt",0),RE("^dow$",1,"ught",0),RE("^dream$",2,"amt",0),RE("^dwell$",3,"elt",0),RE("^enwind$",3,"ound",0),RE("^feel$",3,"elt",0),RE("^flee$",3,"led",0),RE("^floodlight$",5,"lit",0),RE("^arise$",3,"ose",0),RE("^eat$",3,"ate",0),RE("^backbite$",4,"bit",0),RE("^backslide$",4,"lid",0),RE("^befall$",3,"ell",0),RE("^begin$",3,"gan",0),RE("^beget$",3,"got",0),RE("^behold$",3,"eld",0),RE("^bespeak$",3,"oke",0),RE("^bestride$",3,"ode",0),RE("^betake$",3,"ook",0),RE("^bite$",4,"bit",0),RE("^blow$",3,"lew",0),RE("^bear$",3,"ore",0),RE("^break$",3,"oke",0),RE("^choose$",4,"ose",0),RE("^cleave$",4,"ove",0),RE("^countersink$",3,"ank",0),RE("^drink$",3,"ank",0),RE("^draw$",3,"rew",0),RE("^drive$",3,"ove",0),RE("^fall$",3,"ell",0),RE("^fly$",2,"lew",0),RE("^flyblow$",3,"lew",0),RE("^forbid$",2,"ade",0),RE("^forbear$",3,"ore",0),RE("^foreknow$",3,"new",0),RE("^foresee$",3,"saw",0),RE("^forespeak$",3,"oke",0),RE("^forego$",2,"went",0),RE("^forgive$",3,"ave",0),RE("^forget$",3,"got",0),RE("^forsake$",3,"ook",0),RE("^forspeak$",3,"oke",0),RE("^forswear$",3,"ore",0),RE("^forgo$",2,"went",0),RE("^fight$",4,"ought",0),RE("^find$",3,"ound",0),RE("^freeze$",4,"oze",0),RE("^give$",3,"ave",0),RE("^geld$",3,"elt",0),RE("^gen-up$",3,"ned-up",0),RE("^ghostwrite$",3,"ote",0),RE("^get$",3,"got",0),RE("^grow$",3,"rew",0),RE("^grind$",3,"ound",0),RE("^hear$",2,"ard",0),RE("^hold$",3,"eld",0),RE("^hide$",4,"hid",0),RE("^honey$",2,"ied",0),RE("^inbreed$",4,"red",0),RE("^indwell$",3,"elt",0),RE("^interbreed$",4,"red",0),RE("^interweave$",4,"ove",0),RE("^inweave$",4,"ove",0),RE("^ken$",2,"ent",0),RE("^kneel$",3,"elt",0),RE("^^know$$",3,"new",0),RE("^leap$",2,"apt",0),RE("^learn$",2,"rnt",0),RE("^lead$",4,"led",0),RE("^leave$",4,"eft",0),RE("^light$",5,"lit",0),RE("^lose$",3,"ost",0),RE("^make$",3,"ade",0),RE("^mean$",2,"ant",0),RE("^meet$",4,"met",0),RE("^misbecome$",3,"ame",0),RE("^misdeal$",2,"alt",0),RE("^misgive$",3,"ave",0),RE("^mishear$",2,"ard",0),RE("^mislead$",4,"led",0),RE("^mistake$",3,"ook",0),RE("^misunderstand$",3,"ood",0),RE("^outbreed$",4,"red",0),RE("^outgrow$",3,"rew",0),RE("^outride$",3,"ode",0),RE("^outshine$",3,"one",0),RE("^outshoot$",4,"hot",0),RE("^outstand$",3,"ood",0),RE("^outthink$",3,"ought",0),RE("^outgo$",2,"went",0),RE("^outwear$",3,"ore",0),RE("^overblow$",3,"lew",0),RE("^overbear$",3,"ore",0),RE("^overbuild$",3,"ilt",0),RE("^overcome$",3,"ame",0),RE("^overdraw$",3,"rew",0),RE("^overdrive$",3,"ove",0),RE("^overfly$",2,"lew",0),RE("^overgrow$",3,"rew",0),RE("^overhear$",2,"ard",0),RE("^overpass$",3,"ast",0),RE("^override$",3,"ode",0),RE("^oversee$",3,"saw",0),RE("^overshoot$",4,"hot",0),RE("^overthrow$",3,"rew",0),RE("^overtake$",3,"ook",0),RE("^overwind$",3,"ound",0),RE("^overwrite$",3,"ote",0),RE("^partake$",3,"ook",0),RE("^"+VERBAL_PREFIX+"?run$",2,"an",0),RE("^ring$",3,"ang",0),RE("^rebuild$",3,"ilt",0),RE("^red",0,E,0),RE("^reave$",4,"eft",0),RE("^remake$",3,"ade",0),RE("^resit$",3,"sat",0),RE("^rethink$",3,"ought",0),RE("^retake$",3,"ook",0),RE("^rewind$",3,"ound",0),RE("^rewrite$",3,"ote",0),RE("^ride$",3,"ode",0),RE("^rise$",3,"ose",0),RE("^reeve$",4,"ove",0),RE("^sing$",3,"ang",0),RE("^sink$",3,"ank",0),RE("^sit$",3,"sat",0),RE("^see$",3,"saw",0),RE("^shoe$",3,"hod",0),RE("^shine$",3,"one",0),RE("^shake$",3,"ook",0),RE("^shoot$",4,"hot",0),RE("^shrink$",3,"ank",0),RE("^shrive$",3,"ove",0),RE("^sightsee$",3,"saw",0),RE("^ski$",1,"i'd",0),RE("^skydive$",3,"ove",0),RE("^slay$",3,"lew",0),RE("^slide$",4,"lid",0),RE("^slink$",3,"unk",0),RE("^smite$",4,"mit",0),RE("^seek$",3,"ought",0),RE("^spit$",3,"pat",0),RE("^speed$",4,"ped",0),RE("^spellbind$",3,"ound",0),RE("^spoil$",2,"ilt",0),RE("^speak$",3,"oke",0),RE("^spotlight$",5,"lit",0),RE("^spring$",3,"ang",0),RE("^spin$",3,"pun",0),RE("^stink$",3,"ank",0),RE("^steal$",3,"ole",0),RE("^stand$",3,"ood",0),RE("^stave$",3,"ove",0),RE("^stride$",3,"ode",0),RE("^strive$",3,"ove",0),RE("^strike$",3,"uck",0),RE("^stick$",3,"uck",0),RE("^swim$",3,"wam",0),RE("^swear$",3,"ore",0),RE("^teach$",4,"aught",0),RE("^think$",3,"ought",0),RE("^throw$",3,"rew",0),RE("^take$",3,"ook",0),RE("^tear$",3,"ore",0),RE("^transship$",4,"hip",0),RE("^tread$",4,"rod",0),RE("^typewrite$",3,"ote",0),RE("^unbind$",3,"ound",0),RE("^unclothe$",5,"lad",0),RE("^underbuy$",2,"ought",0),RE("^undergird$",3,"irt",0),RE("^undershoot$",4,"hot",0),RE("^understand$",3,"ood",0),RE("^undertake$",3,"ook",0),RE("^undergo$",2,"went",0),RE("^underwrite$",3,"ote",0),RE("^unfreeze$",4,"oze",0),RE("^unlearn$",2,"rnt",0),RE("^unmake$",3,"ade",0),RE("^unreeve$",4,"ove",0),RE("^unspeak$",3,"oke",0),RE("^unstick$",3,"uck",0),RE("^unswear$",3,"ore",0),RE("^unteach$",4,"aught",0),RE("^unthink$",3,"ought",0),RE("^untread$",4,"rod",0),RE("^unwind$",3,"ound",0),RE("^upbuild$",3,"ilt",0),RE("^uphold$",3,"eld",0),RE("^upheave$",4,"ove",0),RE("^uprise$",3,"ose",0),RE("^upspring$",3,"ang",0),RE("^go$",2,"went",0),RE("^wiredraw$",3,"rew",0),RE("^withdraw$",3,"rew",0),RE("^withhold$",3,"eld",0),RE("^withstand$",3,"ood",0),RE("^wake$",3,"oke",0),RE("^win$",3,"won",0),RE("^wear$",3,"ore",0),RE("^wind$",3,"ound",0),RE("^weave$",4,"ove",0),RE("^write$",3,"ote",0),RE("^trek$",1,"cked",0),RE("^ko$",1,"o'd",0),RE("^bid",2,"ade",0),RE("^win$",2,"on",0),RE("^swim",2,"am",0),RE("^"+VERBAL_PREFIX+"?(cast|thrust|typeset|cut|bid|upset|wet|bet|cut|hit|hurt|inset|let|cost|burst|beat|beset|set|upset|offset|put|quit|wed|typeset|wed|spread|split|slit|read|run|shut|shed|lay)$",0,E,0)],PRESENT_TENSE_RULES=[RE("^aby$",0,"es",0),RE("^bog-down$",5,"s-down",0),RE("^chivy$",1,"vies",0),RE("^gen-up$",3,"s-up",0),RE("^prologue$",3,"gs",0),RE("^picknic$",0,"ks",0),RE("^ko$",0,"'s",0),RE("[osz]$",0,"es",1),RE("^have$",2,"s",0),RE(CONS+"y$",1,"ies",1),RE("^be$",2,"is"),RE("([zsx]|ch|sh)$",0,"es",1)],VERB_CONS_DOUBLING=["abat","abet","abhor","abut","accur","acquit","adlib","admit","aerobat","aerosol","agendaset","allot","alot","anagram","annul","appal","apparel","armbar","aver","babysit","airdrop","appal","blackleg","bobsled","bur","chum","confab","counterplot","curet","dib","backdrop","backfil","backflip","backlog","backpedal","backslap","backstab","bag","balfun","ballot","ban","bar","barbel","bareleg","barrel","bat","bayonet","becom","bed","bedevil","bedwet","beenhop","befit","befog","beg","beget","begin","bejewel","bemedal","benefit","benum","beset","besot","bestir","bet","betassel","bevel","bewig","bib","bid","billet","bin","bip","bit","bitmap","blab","blag","blam","blan","blat","bles","blim","blip","blob","bloodlet","blot","blub","blur","bob","bodypop","bog","booby-trap","boobytrap","booksel","bootleg","bop","bot","bowel","bracket","brag","brig","brim","bud","buffet","bug","bullshit","bum","bun","bus","but","cab","cabal","cam","can","cancel","cap","caracol","caravan","carburet","carnap","carol","carpetbag","castanet","cat","catcal","catnap","cavil","chan","chanel","channel","chap","char","chargecap","chat","chin","chip","chir","chirrup","chisel","chop","chug","chur","clam","clap","clearcut","clip","clodhop","clog","clop","closet","clot","club","co-occur","co-program","co-refer","co-run","co-star","cob","cobweb","cod","coif","com","combat","comit","commit","compel","con","concur","confer","confiscat","control","cop","coquet","coral","corbel","corral","cosset","cotransmit","councel","council","counsel","court-martial","crab","cram","crap","crib","crop","crossleg","cub","cudgel","cum","cun","cup","cut","dab","dag","dam","dan","dap","daysit","de-control","de-gazet","de-hul","de-instal","de-mob","de-program","de-rig","de-skil","deadpan","debag","debar","log","decommit","decontrol","defer","defog","deg","degas","deinstal","demit","demob","demur","den","denet","depig","depip","depit","der","deskil","deter","devil","diagram","dial","dig","dim","din","dip","disbar","disbud","discomfit","disembed","disembowel","dishevel","disinter","dispel","disprefer","distil","dog","dognap","don","doorstep","dot","dowel","drag","drat","driftnet","distil","egotrip","enrol","enthral","extol","fulfil","gaffe","golliwog","idyl","inspan","drip","drivel","drop","drub","drug","drum","dub","duel","dun","dybbuk","earwig","eavesdrop","ecolabel","eitherspigot","electroblot","embed","emit","empanel","enamel","endlabel","endtrim","enrol","enthral","entrammel","entrap","enwrap","equal","equip","estop","exaggerat","excel","expel","extol","fag","fan","farewel","fat","featherbed","feget","fet","fib","fig","fin","fingerspel","fingertip","fit","flab","flag","flap","flip","flit","flog","flop","fob","focus","fog","footbal","footslog","fop","forbid","forget","format","fortunetel","fot","foxtrot","frag","freefal","fret","frig","frip","frog","frug","fuel","fufil","fulfil","fullyfit","fun","funnel","fur","furpul","gab","gad","gag","gam","gambol","gap","garot","garrot","gas","gat","gel","gen","get","giftwrap","gig","gimbal","gin","glam","glenden","glendin","globetrot","glug","glut","gob","goldpan","goostep","gossip","grab","gravel","grid","grin","grip","grit","groundhop","grovel","grub","gum","gun","gunrun","gut","gyp","haircut","ham","han","handbag","handicap","handknit","handset","hap","hareleg","hat","headbut","hedgehop","hem","hen","hiccup","highwal","hip","hit","hobnob","hog","hop","horsewhip","hostel","hot","hotdog","hovel","hug","hum","humbug","hup","hushkit","hut","illfit","imbed","immunblot","immunoblot","impannel","impel","imperil","incur","infer","infil","inflam","initial","input","inset","instil","inter","interbed","intercrop","intercut","interfer","instal","instil","intermit","japan","jug","kris","manumit","mishit","mousse","mud","interwar","jab","jag","jam","jar","jawdrop","jet","jetlag","jewel","jib","jig","jitterbug","job","jog","jog-trot","jot","jut","ken","kennel","kid","kidnap","kip","kissogram","kit","knap","kneecap","knit","knob","knot","kor","label","lag","lam","lap","lavel","leafcut","leapfrog","leg","lem","lep","let","level","libel","lid","lig","lip","lob","log","lok","lollop","longleg","lop","lowbal","lug","mackerel","mahom","man","map","mar","marshal","marvel","mat","matchwin","metal","micro-program","microplan","microprogram","milksop","mis-cal","mis-club","mis-spel","miscal","mishit","mislabel","mit","mob","mod","model","mohmam","monogram","mop","mothbal","mug","multilevel","mum","nab","nag","nan","nap","net","nightclub","nightsit","nip","nod","nonplus","norkop","nostril","not","nut","nutmeg","occur","ocur","offput","offset","omit","ommit","onlap","out-general","out-gun","out-jab","out-plan","out-pol","out-pul","out-put","out-run","out-sel","outbid","outcrop","outfit","outgas","outgun","outhit","outjab","outpol","output","outrun","outship","outshop","outsin","outstrip","outswel","outspan","overcrop","pettifog","photostat","pouf","preset","prim","pug","ret","rosin","outwit","over-commit","over-control","over-fil","over-fit","over-lap","over-model","over-pedal","over-pet","over-run","over-sel","over-step","over-tip","over-top","overbid","overcal","overcommit","overcontrol","overcrap","overdub","overfil","overhat","overhit","overlap","overman","overplot","overrun","overshop","overstep","overtip","overtop","overwet","overwil","pad","paintbal","pan","panel","paperclip","par","parallel","parcel","partiescal","pat","patrol","pedal","peewit","peg","pen","pencil","pep","permit","pet","petal","photoset","phototypeset","phut","picket","pig","pilot","pin","pinbal","pip","pipefit","pipet","pit","plan","plit","plod","plop","plot","plug","plumet","plummet","pod","policyset","polyfil","ponytrek","pop","pot","pram","prebag","predistil","predril","prefer","prefil","preinstal","prep","preplan","preprogram","prizewin","prod","profer","prog","program","prop","propel","pub","pummel","pun","pup","pushfit","put","quarel","quarrel","quickskim","quickstep","quickwit","quip","quit","quivertip","quiz","rabbit","rabit","radiolabel","rag","ram","ramrod","rap","rat","ratecap","ravel","re-admit","re-cal","re-cap","re-channel","re-dig","re-dril","re-emit","re-fil","re-fit","re-flag","re-format","re-fret","re-hab","re-instal","re-inter","re-lap","re-let","re-map","re-metal","re-model","re-pastel","re-plan","re-plot","re-plug","re-pot","re-program","re-refer","re-rig","re-rol","re-run","re-sel","re-set","re-skin","re-stal","re-submit","re-tel","re-top","re-transmit","re-trim","re-wrap","readmit","reallot","rebel","rebid","rebin","rebut","recap","rechannel","recommit","recrop","recur","recut","red","redril","refer","refit","reformat","refret","refuel","reget","regret","reinter","rejig","rekit","reknot","relabel","relet","rem","remap","remetal","remit","remodel","reoccur","rep","repel","repin","replan","replot","repol","repot","reprogram","rerun","reset","resignal","resit","reskil","resubmit","retransfer","retransmit","retro-fit","retrofit","rev","revel","revet","rewrap","rib","richochet","ricochet","rid","rig","rim","ringlet","rip","rit","rival","rivet","roadrun","rob","rocket","rod","roset","rot","rowel","rub","run","runnel","rut","sab","sad","sag","sandbag","sap","scab","scalpel","scam","scan","scar","scat","schlep","scrag","scram","shall","sled","smut","stet","sulfuret","trepan","unrip","unstop","whir","whop","wig","scrap","scrat","scrub","scrum","scud","scum","scur","semi-control","semi-skil","semi-skim","semiskil","sentinel","set","shag","sham","shed","shim","shin","ship","shir","shit","shlap","shop","shopfit","shortfal","shot","shovel","shred","shrinkwrap","shrivel","shrug","shun","shut","side-step","sideslip","sidestep","signal","sin","sinbin","sip","sit","skid","skim","skin","skip","skir","skrag","slab","slag","slam","slap","slim","slip","slit","slob","slog","slop","slot","slowclap","slug","slum","slur","smit","snag","snap","snip","snivel","snog","snorkel","snowcem","snub","snug","sob","sod","softpedal","son","sop","spam","span","spar","spat","spiderweb","spin","spiral","spit","splat","split","spot","sprag","spraygun","sprig","springtip","spud","spur","squat","squirrel","stab","stag","star","stem","sten","stencil","step","stir","stop","storytel","strap","strim","strip","strop","strug","strum","strut","stub","stud","stun","sub","subcrop","sublet","submit","subset","suedetrim","sum","summit","sun","suntan","sup","super-chil","superad","swab","swag","swan","swap","swat","swig","swim","swivel","swot","tab","tag","tan","tansfer","tap","tar","tassel","tat","tefer","teleshop","tendril","terschel","th'strip","thermal","thermostat","thin","throb","thrum","thud","thug","tightlip","tin","tinsel","tip","tittup","toecap","tog","tom","tomorrow","top","tot","total","towel","traget","trainspot","tram","trammel","transfer","tranship","transit","transmit","transship","trap","travel","trek","trendset","trim","trip","tripod","trod","trog","trot","trousseaushop","trowel","trup","tub","tug","tunnel","tup","tut","twat","twig","twin","twit","typeset","tyset","un-man","unban","unbar","unbob","uncap","unclip","uncompel","undam","under-bil","under-cut","under-fit","under-pin","under-skil","underbid","undercut","underlet","underman","underpin","unfit","unfulfil","unknot","unlip","unlywil","unman","unpad","unpeg","unpin","unplug","unravel","unrol","unscrol","unsnap","unstal","unstep","unstir","untap","unwrap","unzip","up","upset","upskil","upwel","ven","verbal","vet","victual","vignet","wad","wag","wainscot","wan","war","water-log","waterfal","waterfil","waterlog","weasel","web","wed","wet","wham","whet","whip","whir","whiteskin","whiz","whup","wildcat","win","windmil","wit","woodchop","woodcut","wor","worship","wrap","wiretap","yen","yak","yap","yarnspin","yip","yodel","zag","zap","zig","zig-zag","zigzag","zip","ztrip","hand-bag","hocus","hocus-pocus"],PAST_PARTICIPLE_RULESET={
name:"PAST_PARTICIPLE",defaultRule:RE(ANY_STEM,0,"ed",2),rules:PAST_PARTICIPLE_RULES,doubling:!0},PRESENT_PARTICIPLE_RULESET={name:"ING_FORM",defaultRule:RE(ANY_STEM,0,"ing",2),rules:ING_FORM_RULES,doubling:!0},PAST_TENSE_RULESET={name:"PAST_TENSE",defaultRule:RE(ANY_STEM,0,"ed",2),rules:PAST_TENSE_RULES,doubling:!0},PRESENT_TENSE_RULESET={name:"PRESENT_TENSE",defaultRule:RE(ANY_STEM,0,"s",2),rules:PRESENT_TENSE_RULES,doubling:!1},hasProcessing="undefined"!=typeof Processing;!RiTa.SILENT&&console&&console.log("[INFO] RiTaJS.version ["+RiTa.VERSION+"]"),window?(window.RiTa=RiTa,window.RiString=RiString,window.RiLexicon=RiLexicon,window.RiGrammar=RiGrammar,window.RiMarkov=RiMarkov,window.RiTaEvent=RiTaEvent,window.RiWordNet=RiWordNet):"undefined"!=typeof module&&module.exports&&(module.exports.RiTa=RiTa,module.exports.RiText=RiText,module.exports.RiString=RiString,module.exports.RiLexicon=RiLexicon,module.exports.RiGrammar=RiGrammar,module.exports.RiMarkov=RiMarkov,module.exports.RiTaEvent=RiTaEvent,module.exports.RiWordNet=RiWordNet),RiTa.p5Compatible(!1)}("undefined"!=typeof window?window:null);